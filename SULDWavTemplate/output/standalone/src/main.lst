1     	 0000					.public _K1
2     	 0000					.public _K2
3     	 0000					.public _coeffH
4     	 0000					.public _coeffL
5     	 0000					.public _enable
6     	 0000					.public _sampleBuffer
7     	 0000					.public _sb_ptr0
8     	 0000					.public _sb_ptr1
9     	 0000					.public _sb_ptr2
10    	 0000					.public _sb_ptr3
11    	 0000					.public _sb_ptr4
12    	 0000					.public _sb_ptr5
13    	 0000					.public _sb_ptr6
14    	 0000					.public _sb_ptr7
15    	 0000					.public _z_xH
16    	 0000					.public _z_xL
17    	 0000					.public _z_yH
18    	 0000					.public _z_yL
19    	 0000					.public _calculateShelvingCoeff
20    	 0000					.extern _cl_wavread_bits_per_sample
21    	 0000					.extern _cl_wavread_close
22    	 0000					.extern _cl_wavread_frame_rate
23    	 0000					.extern _cl_wavread_getnchannels
24    	 0000					.extern _cl_wavread_number_of_frames
25    	 0000					.extern _cl_wavread_open
26    	 0000					.extern _cl_wavread_recvsample
27    	 0000					.extern _cl_wavwrite_close
28    	 0000					.extern _cl_wavwrite_open
29    	 0000					.extern _cl_wavwrite_sendsample
30    	 0000					.public _clip
31    	 0000					.extern _first_order_IIR
32    	 0000					.public _main
33    	 0000					.extern _printf
34    	 0000					.public _processing
35    	 0000					.public _shelvingHP
36    	 0000					.public _shelvingLP
37    	 0000					.extern _strcmp
38    	 0000					.extern _strcpy
39    	 0000					.extern __div
40    							.xdata_ovly
40     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
41    	 0000				_Fch
42    	 0000					.bss (0x1)
43    							.xdata_ovly
43     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
44    	 0000				_Fcl
45    	 0000					.bss (0x1)
46    							.xdata_ovly
46     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
47    	 0000				_K1
48    	 0000					.dw  (0x0)
	 0000	 00000000	 
49    							.xdata_ovly
49     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
50    	 0000				_K2
51    	 0000					.dw  (0x0)
	 0000	 00000000	 
52    							.xdata_ovly
52     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
53    	 0000				_alpha1
54    	 0000					.dw  (0x0)
	 0000	 00000000	 
55    							.xdata_ovly
55     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
56    	 0000				_alpha2
57    	 0000					.dw  (0x0)
	 0000	 00000000	 
58    							.xdata_ovly align 4
58     >> start of macro: .xdata_ovly align
1+    									seg_align , "X_OVLY", X, 4
1+     >> start of macro: seg_align
1+    						    SEGMENT "X_OVLY" ALIGN( 4 )
2+    						  .if "" != ""
3+    						___SegStart_X_
4+    						  .endif
5+    							#RememberSegmentType
6+     >> end of macro: seg_align
2+     >> end of macro: .xdata_ovly align
59    	 0000				_coeffH
60    	 0000					.dw  (0x0)
	 0000	 00000000	 
61    	 0001					.dw  (0x0)
	 0001	 00000000	 
62    	 0002					.dw  (0x0)
	 0002	 00000000	 
63    	 0003					.dw  (0x0)
	 0003	 00000000	 
64    							.xdata_ovly align 4
64     >> start of macro: .xdata_ovly align
1+    									seg_align , "X_OVLY", X, 4
1+     >> start of macro: seg_align
1+    						    SEGMENT "X_OVLY" ALIGN( 4 )
2+    						  .if "" != ""
3+    						___SegStart_X_
4+    						  .endif
5+    							#RememberSegmentType
6+     >> end of macro: seg_align
2+     >> end of macro: .xdata_ovly align
65    	 0000				_coeffL
66    	 0000					.dw  (0x0)
	 0000	 00000000	 
67    	 0001					.dw  (0x0)
	 0001	 00000000	 
68    	 0002					.dw  (0x0)
	 0002	 00000000	 
69    	 0003					.dw  (0x0)
	 0003	 00000000	 
70    							.xdata_ovly
70     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
71    	 0000				_enable
72    	 0000					.dw  (0x1)
	 0000	 00000001	 
73    							.xdata_ovly
73     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
74    	 0000				_main_h
75    	 0000					.bss (0x1)
76    							.xdata_ovly
76     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
77    	 0000				_nChannels
78    	 0000					.bss (0x1)
79    							.ydata_ovly
79     >> start of macro: .ydata_ovly
1+    									seg_single , "Y_OVLY", Y
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_Y_ )
2+    						    segment
3+    						  .else
4+    						    segment "Y_OVLY"
5+    							.if "" != ""
6+    						___SegStart_Y_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .ydata_ovly
80    	 0000				_sampleBuffer
81    	 0000					.bss (0x80)
82    							.xdata_ovly
82     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
83    	 0000				_sb_ptr0
84    	 0000					.bss (0x1)
85    							.xdata_ovly
85     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
86    	 0000				_sb_ptr1
87    	 0000					.bss (0x1)
88    							.xdata_ovly
88     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
89    	 0000				_sb_ptr2
90    	 0000					.bss (0x1)
91    							.xdata_ovly
91     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
92    	 0000				_sb_ptr3
93    	 0000					.bss (0x1)
94    							.xdata_ovly
94     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
95    	 0000				_sb_ptr4
96    	 0000					.bss (0x1)
97    							.xdata_ovly
97     >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
98    	 0000				_sb_ptr5
99    	 0000					.bss (0x1)
100   							.xdata_ovly
100    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
101   	 0000				_sb_ptr6
102   	 0000					.bss (0x1)
103   							.xdata_ovly
103    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
104   	 0000				_sb_ptr7
105   	 0000					.bss (0x1)
106   							.xdata_ovly
106    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
107   	 0000				_string_const_0
108   	 0000					.dw  (0x30)
	 0000	 00000030	 
109   	 0001					.dw  (0x0)
	 0001	 00000000	 
110   							.xdata_ovly
110    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
111   	 0000				_string_const_1
112   	 0000					.dw  (0x45)
	 0000	 00000045	 
113   	 0001					.dw  (0x72)
	 0001	 00000072	 
114   	 0002					.dw  (0x72)
	 0002	 00000072	 
115   	 0003					.dw  (0x6f)
	 0003	 0000006F	 
116   	 0004					.dw  (0x72)
	 0004	 00000072	 
117   	 0005					.dw  (0x3a)
	 0005	 0000003A	 
118   	 0006					.dw  (0x20)
	 0006	 00000020	 
119   	 0007					.dw  (0x43)
	 0007	 00000043	 
120   	 0008					.dw  (0x6f)
	 0008	 0000006F	 
121   	 0009					.dw  (0x75)
	 0009	 00000075	 
122   	 000A					.dw  (0x6c)
	 000A	 0000006C	 
123   	 000B					.dw  (0x64)
	 000B	 00000064	 
124   	 000C					.dw  (0x20)
	 000C	 00000020	 
125   	 000D					.dw  (0x6e)
	 000D	 0000006E	 
126   	 000E					.dw  (0x6f)
	 000E	 0000006F	 
127   	 000F					.dw  (0x74)
	 000F	 00000074	 
128   	 0010					.dw  (0x20)
	 0010	 00000020	 
129   	 0011					.dw  (0x6f)
	 0011	 0000006F	 
130   	 0012					.dw  (0x70)
	 0012	 00000070	 
131   	 0013					.dw  (0x65)
	 0013	 00000065	 
132   	 0014					.dw  (0x6e)
	 0014	 0000006E	 
133   	 0015					.dw  (0x20)
	 0015	 00000020	 
134   	 0016					.dw  (0x77)
	 0016	 00000077	 
135   	 0017					.dw  (0x61)
	 0017	 00000061	 
136   	 0018					.dw  (0x76)
	 0018	 00000076	 
137   	 0019					.dw  (0x65)
	 0019	 00000065	 
138   	 001A					.dw  (0x66)
	 001A	 00000066	 
139   	 001B					.dw  (0x69)
	 001B	 00000069	 
140   	 001C					.dw  (0x6c)
	 001C	 0000006C	 
141   	 001D					.dw  (0x65)
	 001D	 00000065	 
142   	 001E					.dw  (0x2e)
	 001E	 0000002E	 
143   	 001F					.dw  (0xa)
	 001F	 0000000A	 
144   	 0020					.dw  (0x0)
	 0020	 00000000	 
145   							.xdata_ovly
145    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
146   	 0000				_string_const_2
147   	 0000					.dw  (0x45)
	 0000	 00000045	 
148   	 0001					.dw  (0x72)
	 0001	 00000072	 
149   	 0002					.dw  (0x72)
	 0002	 00000072	 
150   	 0003					.dw  (0x6f)
	 0003	 0000006F	 
151   	 0004					.dw  (0x72)
	 0004	 00000072	 
152   	 0005					.dw  (0x3a)
	 0005	 0000003A	 
153   	 0006					.dw  (0x20)
	 0006	 00000020	 
154   	 0007					.dw  (0x43)
	 0007	 00000043	 
155   	 0008					.dw  (0x6f)
	 0008	 0000006F	 
156   	 0009					.dw  (0x75)
	 0009	 00000075	 
157   	 000A					.dw  (0x6c)
	 000A	 0000006C	 
158   	 000B					.dw  (0x64)
	 000B	 00000064	 
159   	 000C					.dw  (0x20)
	 000C	 00000020	 
160   	 000D					.dw  (0x6e)
	 000D	 0000006E	 
161   	 000E					.dw  (0x6f)
	 000E	 0000006F	 
162   	 000F					.dw  (0x74)
	 000F	 00000074	 
163   	 0010					.dw  (0x20)
	 0010	 00000020	 
164   	 0011					.dw  (0x6f)
	 0011	 0000006F	 
165   	 0012					.dw  (0x70)
	 0012	 00000070	 
166   	 0013					.dw  (0x65)
	 0013	 00000065	 
167   	 0014					.dw  (0x6e)
	 0014	 0000006E	 
168   	 0015					.dw  (0x20)
	 0015	 00000020	 
169   	 0016					.dw  (0x77)
	 0016	 00000077	 
170   	 0017					.dw  (0x61)
	 0017	 00000061	 
171   	 0018					.dw  (0x76)
	 0018	 00000076	 
172   	 0019					.dw  (0x65)
	 0019	 00000065	 
173   	 001A					.dw  (0x66)
	 001A	 00000066	 
174   	 001B					.dw  (0x69)
	 001B	 00000069	 
175   	 001C					.dw  (0x6c)
	 001C	 0000006C	 
176   	 001D					.dw  (0x65)
	 001D	 00000065	 
177   	 001E					.dw  (0x2e)
	 001E	 0000002E	 
178   	 001F					.dw  (0xa)
	 001F	 0000000A	 
179   	 0020					.dw  (0x0)
	 0020	 00000000	 
180   							.xdata_ovly
180    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
181   	 0000				_test_n
182   	 0000					.dw  (0x80000000)
	 0000	 80000000	 
183   							.xdata_ovly
183    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
184   	 0000				_test_p
185   	 0000					.dw  (0x7fffffff)
	 0000	 7FFFFFFF	 
186   							.xdata_ovly
186    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
187   	 0000				_z_xH
188   	 0000					.bss (0x10)
189   							.xdata_ovly
189    >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
190   	 0000				_z_xL
191   	 0000					.bss (0x10)
192   							.ydata_ovly
192    >> start of macro: .ydata_ovly
1+    									seg_single , "Y_OVLY", Y
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_Y_ )
2+    						    segment
3+    						  .else
4+    						    segment "Y_OVLY"
5+    							.if "" != ""
6+    						___SegStart_Y_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .ydata_ovly
193   	 0000				_z_yH
194   	 0000					.bss (0x10)
195   							.ydata_ovly
195    >> start of macro: .ydata_ovly
1+    									seg_single , "Y_OVLY", Y
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_Y_ )
2+    						    segment
3+    						  .else
4+    						    segment "Y_OVLY"
5+    							.if "" != ""
6+    						___SegStart_Y_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .ydata_ovly
196   	 0000				_z_yL
197   	 0000					.bss (0x10)
198   							.code_ovly
198    >> start of macro: .code_ovly
1+    									seg_single , "CODE_OVLY", CODE
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_CODE_ )
2+    						    segment
3+    						  .else
4+    						    segment "CODE_OVLY"
5+    							.if "" != ""
6+    						___SegStart_CODE_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .code_ovly
199   						
200   						
201   						
202   	 0000				_calculateShelvingCoeff:			/* LN: 143 | CYCLE: 0 | RULES: () */ 
203   	 0000	 BB540007		xmem[i7] = i7			# LN: 143 | 
204   	 0001	 020F7FFF		i7 += 1			# LN: 143 | 
205   	 0002	 87750004		i7 = i7 + (0x4)			# LN: 143 | 
206   	 0003	 91750001		i1 = i7 - (0x1)			# LN: 143 | 
207   	 0004	 98540001		xmem[i1] = a0h			# LN: 143 | 
208   	 0005	 91750002		i1 = i7 - (0x2)			# LN: 143 | 
209   	 0006	 B0540001		xmem[i1] = i0			# LN: 143 | 
210   	 0007				cline_143_0:			/* LN: 147 | CYCLE: 0 | RULES: () */ 
211   	 0007	 90750001		i0 = i7 - (0x1)			# LN: 147 | 
212   	 0008	 88140000		a0 = xmem[i0]			# LN: 147 | 
213   	 0009	 90750003		i0 = i7 - (0x3)			# LN: 147 | 
214   	 000A	 98540000		xmem[i0] = a0h			# LN: 147 | 
215   	 000B				cline_147_0:			/* LN: 148 | CYCLE: 0 | RULES: () */ 
216   	 000B	 90750003		i0 = i7 - (0x3)			# LN: 148 | 
217   	 000C	 8088002D		call (_clip)			# LN: 148 | 
218   	 000D				cline_148_0:			/* LN: 150 | CYCLE: 0 | RULES: () */ 
219   	 000D	 90750001		i0 = i7 - (0x1)			# LN: 150 | 
220   	 000E	 88140000		a0 = xmem[i0]			# LN: 150 | 
221   	 000F	 00004C80		a0 =- a0			# LN: 150 | 
222   	 0010	 90750004		i0 = i7 - (0x4)			# LN: 150 | 
223   	 0011	 98540000		xmem[i0] = a0h			# LN: 150 | 
224   	 0012				cline_150_0:			/* LN: 151 | CYCLE: 0 | RULES: () */ 
225   	 0012	 90750004		i0 = i7 - (0x4)			# LN: 151 | 
226   	 0013	 8088002D		call (_clip)			# LN: 151 | 
227   	 0014				cline_151_0:			/* LN: 153 | CYCLE: 0 | RULES: () */ 
228   	 0014	 90750003		i0 = i7 - (0x3)			# LN: 153 | 
229   	 0015	 91750002		i1 = i7 - (0x2)			# LN: 153 | 
230   	 0016	 B1140001		i1 = xmem[i1]			# LN: 153 | 
231   	 0017	 88140000		a0 = xmem[i0]			# LN: 153 | 
232   	 0018	 98540001		xmem[i1] = a0h			# LN: 153 | 
233   	 0019				cline_153_0:			/* LN: 155 | CYCLE: 0 | RULES: () */ 
234   	 0019	 90750002		i0 = i7 - (0x2)			# LN: 155 | 
235   	 001A	 B0140000		i0 = xmem[i0]			# LN: 155 | 
236   	 001B	 88040000		a0 = xmem[_test_n + 0]			# LN: 155 | 
237   	 001C	 02087FFF		i0 += 1			# LN: 155 | 
238   	 001D	 98540000		xmem[i0] = a0h			# LN: 155 | 
239   	 001E				cline_155_0:			/* LN: 156 | CYCLE: 0 | RULES: () */ 
240   	 001E	 90750002		i0 = i7 - (0x2)			# LN: 156 | 
241   	 001F	 B0140000		i0 = xmem[i0]			# LN: 156 | 
242   	 0020	 88040000		a0 = xmem[_test_p + 0]			# LN: 156 | 
243   	 0021	 02287FFF		i0 += 2			# LN: 156 | 
244   	 0022	 98540000		xmem[i0] = a0h			# LN: 156 | 
245   	 0023				cline_156_0:			/* LN: 157 | CYCLE: 0 | RULES: () */ 
246   	 0023	 90750002		i0 = i7 - (0x2)			# LN: 157 | 
247   	 0024	 B0140000		i0 = xmem[i0]			# LN: 157 | 
248   	 0025	 91750004		i1 = i7 - (0x4)			# LN: 157 | 
249   	 0026	 80050003		i0 = i0 + (0x3)			# LN: 157 | 
250   	 0027	 88140001		a0 = xmem[i1]			# LN: 157 | 
251   	 0028	 98540000		xmem[i0] = a0h			# LN: 157 | 
252   	 0029				cline_157_0:			/* LN: 159 | CYCLE: 0 | RULES: () */ 
253   	 0029	 8008002A		jmp (__epilogue_246)			# LN: 159 | 
254   	 002A				__epilogue_246:			/* LN: 159 | CYCLE: 0 | RULES: () */ 
255   	 002A	 97750004		i7 = i7 - (0x4)			# LN: 159 | 
256   	 002B	 02177FFF		i7 -= 1			# LN: 159 | 
257   	 002C	 81880000		ret			# LN: 159 | 
258   						
259   						
260   						
261   	 002D				_clip:			/* LN: 49 | CYCLE: 0 | RULES: () */ 
262   	 002D	 BB540007		xmem[i7] = i7			# LN: 49 | 
263   	 002E	 020F7FFF		i7 += 1			# LN: 49 | 
264   	 002F	 87750001		i7 = i7 + (0x1)			# LN: 49 | 
265   	 0030	 91750001		i1 = i7 - (0x1)			# LN: 49 | 
266   	 0031	 B0540001		xmem[i1] = i0			# LN: 49 | 
267   	 0032				cline_49_0:			/* LN: 53 | CYCLE: 0 | RULES: () */ 
268   	 0032	 90750001		i0 = i7 - (0x1)			# LN: 53 | 
269   	 0033	 B0140000		i0 = xmem[i0]			# LN: 53 | 
270   	 0034	 88040000		a0 = xmem[_test_p + 0]			# LN: 53 | 
271   	 0035	 89140010		a1 = xmem[i0]; i0 += 1			# LN: 53, 53 | 
272   	 0036	 91140000		a1l = xmem[i0]			# LN: 53 | 
273   	 0037	 000044C0		a0 = a1 - a0			# LN: 53 | 
274   	 0038	 85080041		if (a <= 0) jmp (else_0)			# LN: 53 | 
275   	 0039				cline_53_0:			/* LN: 56 | CYCLE: 0 | RULES: () */ 
276   	 0039	 90750001		i0 = i7 - (0x1)			# LN: 56 | 
277   	 003A	 B0140000		i0 = xmem[i0]			# LN: 56 | 
278   	 003B	 88040000		a0 = xmem[_test_p + 0]			# LN: 56 | 
279   						#asm begin
280   	 003C	 88540000		xmem[i0]=a0 
281   							
282   						#asm end			# LN: 56 | 
283   	 003D	 91750001		i1 = i7 - (0x1)			# LN: 56 | 
284   	 003E	 B0540001		xmem[i1] = i0			# LN: 56 | 
285   	 003F	 98440000		xmem[_test_p + 0] = a0h			# LN: 56 | 
286   	 0040	 80080050		jmp (endif_0)			# LN: 56 | 
287   	 0041				cline_56_0:			/* LN: 59 | CYCLE: 0 | RULES: () */ 
288   	 0041				else_0:			/* LN: 53 | CYCLE: 0 | RULES: () */ 
289   	 0041	 90750001		i0 = i7 - (0x1)			# LN: 59 | 
290   	 0042	 B0140000		i0 = xmem[i0]			# LN: 59 | 
291   	 0043	 88040000		a0 = xmem[_test_n + 0]			# LN: 59 | 
292   	 0044	 89140010		a1 = xmem[i0]; i0 += 1			# LN: 59, 59 | 
293   	 0045	 91140000		a1l = xmem[i0]			# LN: 59 | 
294   	 0046	 000044C0		a0 = a1 - a0			# LN: 59 | 
295   	 0047	 84C80050		if (a >= 0) jmp (else_1)			# LN: 59 | 
296   	 0048				cline_59_0:			/* LN: 61 | CYCLE: 0 | RULES: () */ 
297   	 0048	 90750001		i0 = i7 - (0x1)			# LN: 61 | 
298   	 0049	 B0140000		i0 = xmem[i0]			# LN: 61 | 
299   	 004A	 88040000		a0 = xmem[_test_n + 0]			# LN: 61 | 
300   						#asm begin
301   	 004B	 88540000		xmem[i0]=a0 
302   							
303   						#asm end			# LN: 61 | 
304   	 004C	 91750001		i1 = i7 - (0x1)			# LN: 61 | 
305   	 004D	 B0540001		xmem[i1] = i0			# LN: 61 | 
306   	 004E	 98440000		xmem[_test_n + 0] = a0h			# LN: 61 | 
307   	 004F	 80080050		jmp (endif_1)			# LN: 61 | 
308   	 0050				cline_61_0:			/* LN: 64 | CYCLE: 0 | RULES: () */ 
309   	 0050				endif_0:			/* LN: 53 | CYCLE: 0 | RULES: () */ 
310   	 0050				endif_1:			/* LN: 59 | CYCLE: 0 | RULES: () */ 
311   	 0050				else_1:			/* LN: 59 | CYCLE: 0 | RULES: () */ 
312   	 0050	 80080051		jmp (__epilogue_240)			# LN: 64 | 
313   	 0051				__epilogue_240:			/* LN: 64 | CYCLE: 0 | RULES: () */ 
314   	 0051	 97750001		i7 = i7 - (0x1)			# LN: 64 | 
315   	 0052	 02177FFF		i7 -= 1			# LN: 64 | 
316   	 0053	 81880000		ret			# LN: 64 | 
317   						
318   						
319   						
320   							# This construction should ensure linking of crt0 in case when target is a standalone program without the OS
321   							.if defined(_OVLY_)
322   								.if .strcmp('standalone',_OVLY_)=0
323   								.if .strcmp('crystal32',_TARGET_FAMILY_)=0
324   	 0000							.extern __start         # dummy use of __start to force linkage of crt0
325   	 0000				dummy		.equ(__start)
326   								.else
327   									.extern __intvec         # dummy use of __intvec to force linkage of intvec
328   						dummy		.equ(__intvec)
329   								.endif
330   								.endif
331   							.endif
332   						
333   	 0054				_main:			/* LN: 349 | CYCLE: 0 | RULES: () */ 
334   	 0054	 BB540007		xmem[i7] = i7			# LN: 349 | 
335   	 0055	 020F7FFF		i7 += 1			# LN: 349 | 
336   	 0056	 8775020B		i7 = i7 + (0x20b)			# LN: 349 | 
337   	 0057	 91750001		i1 = i7 - (0x1)			# LN: 349 | 
338   	 0058	 98540001		xmem[i1] = a0h			# LN: 349 | 
339   	 0059	 91750002		i1 = i7 - (0x2)			# LN: 349 | 
340   	 005A	 B0540001		xmem[i1] = i0			# LN: 349 | 
341   	 005B				cline_349_0:			/* LN: 364 | CYCLE: 0 | RULES: () */ 
342   	 005B	 90750003		i0 = i7 - (0x3)			# LN: 364 | 
343   	 005C	 00004DC0		a0 = 0			# LN: 364 | 
344   	 005D	 98540000		xmem[i0] = a0h			# LN: 364 | 
345   	 005E	 808000B6		do (0x8), label_end_94			# LN: 364 | 
346   	 005F				cline_364_0:			/* LN: 365 | CYCLE: 0 | RULES: () */ 
347   	 005F				label_begin_94:			/* LN: 364 | CYCLE: 0 | RULES: () */ 
348   	 005F	 90750003		i0 = i7 - (0x3)			# LN: 365 | 
349   	 0060	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 365, 365 | 
350   	 0061	 00004E00		a0 = a0 << 1			# LN: 365 | 
351   	 0062	 48707FFF		i0 = a0			# LN: 365 | 
352   	 0063	 00007FFF		nop #empty cycle
353   	 0064	 80050000		i0 = i0 + (_z_xH + 0)			# LN: 365 | 
354   	 0065	 99540000		xmem[i0] = a1h			# LN: 365 | 
355   	 0066				cline_365_0:			/* LN: 366 | CYCLE: 0 | RULES: () */ 
356   	 0066	 90750003		i0 = i7 - (0x3)			# LN: 366 | 
357   	 0067	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 366, 366 | 
358   	 0068	 00004E00		a0 = a0 << 1			# LN: 366 | 
359   	 0069	 48707FFF		i0 = a0			# LN: 366 | 
360   	 006A	 00007FFF		nop #empty cycle
361   	 006B	 80050000		i0 = i0 + (_z_xH + 0)			# LN: 366 | 
362   	 006C	 02087FFF		i0 += 1			# LN: 366 | 
363   	 006D	 99540000		xmem[i0] = a1h			# LN: 366 | 
364   	 006E				cline_366_0:			/* LN: 368 | CYCLE: 0 | RULES: () */ 
365   	 006E	 90750003		i0 = i7 - (0x3)			# LN: 368 | 
366   	 006F	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 368, 368 | 
367   	 0070	 00004E00		a0 = a0 << 1			# LN: 368 | 
368   	 0071	 48707FFF		i0 = a0			# LN: 368 | 
369   	 0072	 00007FFF		nop #empty cycle
370   	 0073	 80050000		i0 = i0 + (_z_yH + 0)			# LN: 368 | 
371   	 0074	 99D40000		ymem[i0] = a1h			# LN: 368 | 
372   	 0075				cline_368_0:			/* LN: 369 | CYCLE: 0 | RULES: () */ 
373   	 0075	 90750003		i0 = i7 - (0x3)			# LN: 369 | 
374   	 0076	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 369, 369 | 
375   	 0077	 00004E00		a0 = a0 << 1			# LN: 369 | 
376   	 0078	 48707FFF		i0 = a0			# LN: 369 | 
377   	 0079	 00007FFF		nop #empty cycle
378   	 007A	 80050000		i0 = i0 + (_z_yH + 0)			# LN: 369 | 
379   	 007B	 02087FFF		i0 += 1			# LN: 369 | 
380   	 007C	 99D40000		ymem[i0] = a1h			# LN: 369 | 
381   	 007D				cline_369_0:			/* LN: 372 | CYCLE: 0 | RULES: () */ 
382   	 007D	 90750003		i0 = i7 - (0x3)			# LN: 372 | 
383   	 007E	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 372, 372 | 
384   	 007F	 00004E00		a0 = a0 << 1			# LN: 372 | 
385   	 0080	 48707FFF		i0 = a0			# LN: 372 | 
386   	 0081	 00007FFF		nop #empty cycle
387   	 0082	 80050000		i0 = i0 + (_z_xL + 0)			# LN: 372 | 
388   	 0083	 99540000		xmem[i0] = a1h			# LN: 372 | 
389   	 0084				cline_372_0:			/* LN: 373 | CYCLE: 0 | RULES: () */ 
390   	 0084	 90750003		i0 = i7 - (0x3)			# LN: 373 | 
391   	 0085	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 373, 373 | 
392   	 0086	 00004E00		a0 = a0 << 1			# LN: 373 | 
393   	 0087	 48707FFF		i0 = a0			# LN: 373 | 
394   	 0088	 00007FFF		nop #empty cycle
395   	 0089	 80050000		i0 = i0 + (_z_xL + 0)			# LN: 373 | 
396   	 008A	 02087FFF		i0 += 1			# LN: 373 | 
397   	 008B	 99540000		xmem[i0] = a1h			# LN: 373 | 
398   	 008C				cline_373_0:			/* LN: 375 | CYCLE: 0 | RULES: () */ 
399   	 008C	 90750003		i0 = i7 - (0x3)			# LN: 375 | 
400   	 008D	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 375, 375 | 
401   	 008E	 00004E00		a0 = a0 << 1			# LN: 375 | 
402   	 008F	 48707FFF		i0 = a0			# LN: 375 | 
403   	 0090	 00007FFF		nop #empty cycle
404   	 0091	 80050000		i0 = i0 + (_z_yL + 0)			# LN: 375 | 
405   	 0092	 99D40000		ymem[i0] = a1h			# LN: 375 | 
406   	 0093				cline_375_0:			/* LN: 376 | CYCLE: 0 | RULES: () */ 
407   	 0093	 90750003		i0 = i7 - (0x3)			# LN: 376 | 
408   	 0094	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 376, 376 | 
409   	 0095	 00004E00		a0 = a0 << 1			# LN: 376 | 
410   	 0096	 48707FFF		i0 = a0			# LN: 376 | 
411   	 0097	 00007FFF		nop #empty cycle
412   	 0098	 80050000		i0 = i0 + (_z_yL + 0)			# LN: 376 | 
413   	 0099	 02087FFF		i0 += 1			# LN: 376 | 
414   	 009A	 99D40000		ymem[i0] = a1h			# LN: 376 | 
415   	 009B				cline_376_0:			/* LN: 381 | CYCLE: 0 | RULES: () */ 
416   	 009B	 90750004		i0 = i7 - (0x4)			# LN: 381 | 
417   	 009C	 00004DC0		a0 = 0			# LN: 381 | 
418   	 009D	 98540000		xmem[i0] = a0h			# LN: 381 | 
419   	 009E	 810000B0		do (0x10), label_end_93			# LN: 381 | 
420   	 009F				cline_381_0:			/* LN: 383 | CYCLE: 0 | RULES: () */ 
421   	 009F				label_begin_93:			/* LN: 381 | CYCLE: 0 | RULES: () */ 
422   	 009F	 90750003		i0 = i7 - (0x3)			# LN: 383 | 
423   	 00A0	 18404DC1		a0 = xmem[i0]; a1 = 0			# LN: 383, 383 | 
424   	 00A1	 00004EC0		a0 = a0 << 4			# LN: 383 | 
425   	 00A2	 48707FFF		i0 = a0			# LN: 383 | 
426   	 00A3	 91750004		i1 = i7 - (0x4)			# LN: 383 | 
427   	 00A4	 80050000		i0 = i0 + (_sampleBuffer + 0)			# LN: 383 | 
428   	 00A5	 88140001		a0 = xmem[i1]			# LN: 383 | 
429   	 00A6	 0C707FFF		b0 = i0			# LN: 383 | 
430   	 00A7	 00004420		a0 = a0 + b0			# LN: 383 | 
431   	 00A8	 98090030		AnyReg(i0, a0h)			# LN: 383 | 
432   	 00A9	 00007FFF		nop #empty cycle
433   	 00AA	 99D40000		ymem[i0] = a1h			# LN: 383 | 
434   	 00AB				cline_383_0:			/* LN: 381 | CYCLE: 0 | RULES: () */ 
435   	 00AB				init_latch_label_1:			/* LN: 385 | CYCLE: 0 | RULES: () */ 
436   	 00AB	 90750004		i0 = i7 - (0x4)			# LN: 381 | 
437   	 00AC	 88140000		a0 = xmem[i0]			# LN: 381 | 
438   	 00AD	 894A0001		uhalfword(a1) = (0x1)			# LN: 381 | 
439   	 00AE	 00004408		a0 = a0 + a1			# LN: 381 | 
440   	 00AF	 90750004		i0 = i7 - (0x4)			# LN: 381 | 
441   	 00B0				label_end_93:			# LN: 381 | CYCLE: 5 | RULES: ()
442   	 00B0	 98540000		xmem[i0] = a0h			# LN: 381 | 
443   	 00B1				cline_381_1:			/* LN: 364 | CYCLE: 0 | RULES: () */ 
444   	 00B1				init_latch_label_2:			/* LN: 387 | CYCLE: 0 | RULES: () */ 
445   	 00B1				for_end_2:			/* LN: 381 | CYCLE: 0 | RULES: () */ 
446   	 00B1	 90750003		i0 = i7 - (0x3)			# LN: 364 | 
447   	 00B2	 88140000		a0 = xmem[i0]			# LN: 364 | 
448   	 00B3	 894A0001		uhalfword(a1) = (0x1)			# LN: 364 | 
449   	 00B4	 00004408		a0 = a0 + a1			# LN: 364 | 
450   	 00B5	 90750003		i0 = i7 - (0x3)			# LN: 364 | 
451   	 00B6				label_end_94:			# LN: 364 | CYCLE: 5 | RULES: ()
452   	 00B6	 98540000		xmem[i0] = a0h			# LN: 364 | 
453   	 00B7				cline_364_1:			/* LN: 389 | CYCLE: 0 | RULES: () */ 
454   	 00B7				for_end_1:			/* LN: 364 | CYCLE: 0 | RULES: () */ 
455   	 00B7	 90750002		i0 = i7 - (0x2)			# LN: 389 | 
456   	 00B8	 B0140000		i0 = xmem[i0]			# LN: 389 | 
457   	 00B9	 A1050000		i1 = (0) + (_string_const_0)			# LN: 389 | 
458   	 00BA	 02287FFF		i0 += 2			# LN: 389 | 
459   	 00BB	 B0140000		i0 = xmem[i0]			# LN: 389 | 
460   	 00BC	 80880000		call (_strcmp)			# LN: 389 | 
461   	 00BD	 00004E80		a0 & a0			# LN: 389 | 
462   	 00BE	 840800C2		if (a == 0) jmp (else_9)			# LN: 389 | 
463   	 00BF				cline_389_0:			/* LN: 390 | CYCLE: 0 | RULES: () */ 
464   	 00BF	 884A0001		uhalfword(a0) = (0x1)			# LN: 390 | 
465   	 00C0	 98440000		xmem[_enable + 0] = a0h			# LN: 390 | 
466   	 00C1	 800800C4		jmp (endif_9)			# LN: 390 | 
467   	 00C2				cline_390_0:			/* LN: 393 | CYCLE: 0 | RULES: () */ 
468   	 00C2				else_9:			/* LN: 389 | CYCLE: 0 | RULES: () */ 
469   	 00C2	 00004DC0		a0 = 0			# LN: 393 | 
470   	 00C3	 98440000		xmem[_enable + 0] = a0h			# LN: 393 | 
471   	 00C4				cline_393_0:			/* LN: 399 | CYCLE: 0 | RULES: () */ 
472   	 00C4				endif_9:			/* LN: 389 | CYCLE: 0 | RULES: () */ 
473   	 00C4	 90750002		i0 = i7 - (0x2)			# LN: 399 | 
474   	 00C5	 B0140000		i0 = xmem[i0]			# LN: 399 | 
475   	 00C6	 91750104		i1 = i7 - (260 - 0)			# LN: 399 | 
476   	 00C7	 B8140000		i4 = xmem[i0]			# LN: 399 | 
477   	 00C8	 B1090030		i0 = i1			# LN: 399 | 
478   	 00C9	 B8090031		i1 = i4			# LN: 399 | 
479   	 00CA	 80880000		call (_strcpy)			# LN: 399 | 
480   	 00CB				cline_399_0:			/* LN: 400 | CYCLE: 0 | RULES: () */ 
481   	 00CB	 90750104		i0 = i7 - (260 - 0)			# LN: 400 | 
482   	 00CC	 80880000		call (_cl_wavread_open)			# LN: 400 | 
483   	 00CD	 98090030		AnyReg(i0, a0h)			# LN: 400 | 
484   	 00CE	 91750105		i1 = i7 - (0x105)			# LN: 400 | 
485   	 00CF	 B0540001		xmem[i1] = i0			# LN: 400 | 
486   	 00D0				cline_400_0:			/* LN: 401 | CYCLE: 0 | RULES: () */ 
487   	 00D0	 90750105		i0 = i7 - (0x105)			# LN: 401 | 
488   	 00D1	 88140000		a0 = xmem[i0]			# LN: 401 | 
489   	 00D2	 00004E80		a0 & a0			# LN: 401 | 
490   	 00D3	 844800D8		if (a != 0) jmp (else_10)			# LN: 401 | 
491   	 00D4				cline_401_0:			/* LN: 403 | CYCLE: 0 | RULES: () */ 
492   	 00D4	 A0050000		i0 = (0) + (_string_const_1)			# LN: 403 | 
493   	 00D5	 80880000		call (_printf)			# LN: 403 | 
494   	 00D6				cline_403_0:			/* LN: 404 | CYCLE: 0 | RULES: () */ 
495   	 00D6	 886AFFFF		halfword(a0) = (0xffff)			# LN: 404 | 
496   	 00D7	 80080190		jmp (__epilogue_250)			# LN: 404 | 
497   	 00D8				cline_404_0:			/* LN: 410 | CYCLE: 0 | RULES: () */ 
498   	 00D8				endif_10:			/* LN: 401 | CYCLE: 0 | RULES: () */ 
499   	 00D8				else_10:			/* LN: 401 | CYCLE: 0 | RULES: () */ 
500   	 00D8	 90750105		i0 = i7 - (0x105)			# LN: 410 | 
501   	 00D9	 B0140000		i0 = xmem[i0]			# LN: 410 | 
502   	 00DA	 80880000		call (_cl_wavread_getnchannels)			# LN: 410 | 
503   	 00DB	 98440000		xmem[_nChannels + 0] = a0h			# LN: 410 | 
504   	 00DC				cline_410_0:			/* LN: 411 | CYCLE: 0 | RULES: () */ 
505   	 00DC	 90750105		i0 = i7 - (0x105)			# LN: 411 | 
506   	 00DD	 B0140000		i0 = xmem[i0]			# LN: 411 | 
507   	 00DE	 80880000		call (_cl_wavread_bits_per_sample)			# LN: 411 | 
508   	 00DF	 90750106		i0 = i7 - (0x106)			# LN: 411 | 
509   	 00E0	 98540000		xmem[i0] = a0h			# LN: 411 | 
510   	 00E1				cline_411_0:			/* LN: 412 | CYCLE: 0 | RULES: () */ 
511   	 00E1	 90750105		i0 = i7 - (0x105)			# LN: 412 | 
512   	 00E2	 B0140000		i0 = xmem[i0]			# LN: 412 | 
513   	 00E3	 80880000		call (_cl_wavread_frame_rate)			# LN: 412 | 
514   	 00E4	 90750107		i0 = i7 - (0x107)			# LN: 412 | 
515   	 00E5	 98540000		xmem[i0] = a0h			# LN: 412 | 
516   	 00E6				cline_412_0:			/* LN: 413 | CYCLE: 0 | RULES: () */ 
517   	 00E6	 90750105		i0 = i7 - (0x105)			# LN: 413 | 
518   	 00E7	 B0140000		i0 = xmem[i0]			# LN: 413 | 
519   	 00E8	 80880000		call (_cl_wavread_number_of_frames)			# LN: 413 | 
520   	 00E9	 90750108		i0 = i7 - (0x108)			# LN: 413 | 
521   	 00EA	 98540000		xmem[i0] = a0h			# LN: 413 | 
522   	 00EB				cline_413_0:			/* LN: 418 | CYCLE: 0 | RULES: () */ 
523   	 00EB	 90750002		i0 = i7 - (0x2)			# LN: 418 | 
524   	 00EC	 B0140000		i0 = xmem[i0]			# LN: 418 | 
525   	 00ED	 91750208		i1 = i7 - (520 - 0)			# LN: 418 | 
526   	 00EE	 02087FFF		i0 += 1			# LN: 418 | 
527   	 00EF	 B8140000		i4 = xmem[i0]			# LN: 418 | 
528   	 00F0	 B1090030		i0 = i1			# LN: 418 | 
529   	 00F1	 B8090031		i1 = i4			# LN: 418 | 
530   	 00F2	 80880000		call (_strcpy)			# LN: 418 | 
531   	 00F3				cline_418_0:			/* LN: 419 | CYCLE: 0 | RULES: () */ 
532   	 00F3	 90750208		i0 = i7 - (520 - 0)			# LN: 419 | 
533   	 00F4	 91750106		i1 = i7 - (0x106)			# LN: 419 | 
534   	 00F5	 88140001		a0 = xmem[i1]			# LN: 419 | 
535   	 00F6	 89040000		a1 = xmem[_nChannels + 0]			# LN: 419 | 
536   	 00F7	 91750107		i1 = i7 - (0x107)			# LN: 419 | 
537   	 00F8	 8C140001		b0 = xmem[i1]			# LN: 419 | 
538   	 00F9	 80880000		call (_cl_wavwrite_open)			# LN: 419 | 
539   	 00FA	 98090030		AnyReg(i0, a0h)			# LN: 419 | 
540   	 00FB	 91750209		i1 = i7 - (0x209)			# LN: 419 | 
541   	 00FC	 B0540001		xmem[i1] = i0			# LN: 419 | 
542   	 00FD				cline_419_0:			/* LN: 420 | CYCLE: 0 | RULES: () */ 
543   	 00FD	 90750209		i0 = i7 - (0x209)			# LN: 420 | 
544   	 00FE	 88140000		a0 = xmem[i0]			# LN: 420 | 
545   	 00FF	 00004E80		a0 & a0			# LN: 420 | 
546   	 0100	 84480105		if (a != 0) jmp (else_11)			# LN: 420 | 
547   	 0101				cline_420_0:			/* LN: 422 | CYCLE: 0 | RULES: () */ 
548   	 0101	 A0050000		i0 = (0) + (_string_const_2)			# LN: 422 | 
549   	 0102	 80880000		call (_printf)			# LN: 422 | 
550   	 0103				cline_422_0:			/* LN: 423 | CYCLE: 0 | RULES: () */ 
551   	 0103	 886AFFFF		halfword(a0) = (0xffff)			# LN: 423 | 
552   	 0104	 80080190		jmp (__epilogue_250)			# LN: 423 | 
553   	 0105				cline_423_0:			/* LN: 426 | CYCLE: 0 | RULES: () */ 
554   	 0105				endif_11:			/* LN: 420 | CYCLE: 0 | RULES: () */ 
555   	 0105				else_11:			/* LN: 420 | CYCLE: 0 | RULES: () */ 
556   	 0105	 887A4000		a0 = (0x4000)			# LN: 426 | 
557   	 0106	 98440000		xmem[_K1 + 0] = a0h			# LN: 426 | 
558   	 0107				cline_426_0:			/* LN: 427 | CYCLE: 0 | RULES: () */ 
559   	 0107	 887A4000		a0 = (0x4000)			# LN: 427 | 
560   	 0108	 98440000		xmem[_K2 + 0] = a0h			# LN: 427 | 
561   	 0109				cline_427_0:			/* LN: 428 | CYCLE: 0 | RULES: () */ 
562   	 0109	 88040000		a0 = xmem[_K1 + 0]			# LN: 428 | 
563   	 010A	 00004E40		a0 = a0 >> 1			# LN: 428 | 
564   	 010B	 98440000		xmem[_K1 + 0] = a0h			# LN: 428 | 
565   	 010C				cline_428_0:			/* LN: 429 | CYCLE: 0 | RULES: () */ 
566   	 010C	 88040000		a0 = xmem[_K2 + 0]			# LN: 429 | 
567   	 010D	 00004E40		a0 = a0 >> 1			# LN: 429 | 
568   	 010E	 98440000		xmem[_K2 + 0] = a0h			# LN: 429 | 
569   	 010F				cline_429_0:			/* LN: 432 | CYCLE: 0 | RULES: () */ 
570   	 010F	 887A4000		a0 = (0x4000)			# LN: 432 | 
571   	 0110	 98440000		xmem[_alpha1 + 0] = a0h			# LN: 432 | 
572   	 0111				cline_432_0:			/* LN: 433 | CYCLE: 0 | RULES: () */ 
573   	 0111	 887AC000		a0 = (0xc000)			# LN: 433 | 
574   	 0112	 98440000		xmem[_alpha2 + 0] = a0h			# LN: 433 | 
575   	 0113				cline_433_0:			/* LN: 434 | CYCLE: 0 | RULES: () */ 
576   	 0113	 88040000		a0 = xmem[_alpha1 + 0]			# LN: 434 | 
577   	 0114	 A0050000		i0 = (0) + (_coeffL)			# LN: 434 | 
578   	 0115	 80880000		call (_calculateShelvingCoeff)			# LN: 434 | 
579   	 0116				cline_434_0:			/* LN: 435 | CYCLE: 0 | RULES: () */ 
580   	 0116	 88040000		a0 = xmem[_alpha2 + 0]			# LN: 435 | 
581   	 0117	 A0050000		i0 = (0) + (_coeffH)			# LN: 435 | 
582   	 0118	 80880000		call (_calculateShelvingCoeff)			# LN: 435 | 
583   	 0119				cline_435_0:			/* LN: 444 | CYCLE: 0 | RULES: () */ 
584   	 0119	 90750108		i0 = i7 - (0x108)			# LN: 444 | 
585   	 011A	 88140000		a0 = xmem[i0]			# LN: 444 | 
586   	 011B	 894A0010		uhalfword(a1) = (0x10)			# LN: 444 | 
587   	 011C	 80880000		call (__div)			# LN: 444 | 
588   	 011D	 98440000		xmem[_main_h + 0] = a0h			# LN: 444 | 
589   	 011E				cline_444_0:			/* LN: 446 | CYCLE: 0 | RULES: () */ 
590   	 011E	 90750003		i0 = i7 - (0x3)			# LN: 446 | 
591   	 011F	 00004DC0		a0 = 0			# LN: 446 | 
592   	 0120	 98540000		xmem[i0] = a0h			# LN: 446 | 
593   	 0121				for_3:			/* LN: 446 | CYCLE: 0 | RULES: () */ 
594   	 0121	 90750003		i0 = i7 - (0x3)			# LN: 446 | 
595   	 0122	 88140000		a0 = xmem[i0]			# LN: 446 | 
596   	 0123	 89040000		a1 = xmem[_main_h + 0]			# LN: 446 | 
597   	 0124	 00004F08		a0 - a1			# LN: 446 | 
598   	 0125	 84C80188		if (a >= 0) jmp (for_end_3)			# LN: 446 | 
599   	 0126				cline_446_0:			/* LN: 448 | CYCLE: 0 | RULES: () */ 
600   	 0126	 90750004		i0 = i7 - (0x4)			# LN: 448 | 
601   	 0127	 00004DC0		a0 = 0			# LN: 448 | 
602   	 0128	 98540000		xmem[i0] = a0h			# LN: 448 | 
603   	 0129	 81000150		do (0x10), label_end_95			# LN: 448 | 
604   	 012A				cline_448_0:			/* LN: 450 | CYCLE: 0 | RULES: () */ 
605   	 012A				label_begin_95:			/* LN: 448 | CYCLE: 0 | RULES: () */ 
606   	 012A	 9075020A		i0 = i7 - (0x20a)			# LN: 450 | 
607   	 012B	 00004DC0		a0 = 0			# LN: 450 | 
608   	 012C	 98540000		xmem[i0] = a0h			# LN: 450 | 
609   	 012D				for_5:			/* LN: 450 | CYCLE: 0 | RULES: () */ 
610   	 012D	 9075020A		i0 = i7 - (0x20a)			# LN: 450 | 
611   	 012E	 88140000		a0 = xmem[i0]			# LN: 450 | 
612   	 012F	 89040000		a1 = xmem[_nChannels + 0]			# LN: 450 | 
613   	 0130	 00004F08		a0 - a1			# LN: 450 | 
614   	 0131	 84C8014B		if (a >= 0) jmp (for_end_5)			# LN: 450 | 
615   	 0132				cline_450_0:			/* LN: 452 | CYCLE: 0 | RULES: () */ 
616   	 0132	 90750105		i0 = i7 - (0x105)			# LN: 452 | 
617   	 0133	 B0140000		i0 = xmem[i0]			# LN: 452 | 
618   	 0134	 80880000		call (_cl_wavread_recvsample)			# LN: 452 | 
619   	 0135	 9075020B		i0 = i7 - (0x20b)			# LN: 452 | 
620   	 0136	 98540000		xmem[i0] = a0h			# LN: 452 | 
621   	 0137				cline_452_0:			/* LN: 453 | CYCLE: 0 | RULES: () */ 
622   	 0137	 9075020A		i0 = i7 - (0x20a)			# LN: 453 | 
623   	 0138	 88140000		a0 = xmem[i0]			# LN: 453 | 
624   	 0139	 00004EC0		a0 = a0 << 4			# LN: 453 | 
625   	 013A	 48707FFF		i0 = a0			# LN: 453 | 
626   	 013B	 91750004		i1 = i7 - (0x4)			# LN: 453 | 
627   	 013C	 80050000		i0 = i0 + (_sampleBuffer + 0)			# LN: 453 | 
628   	 013D	 88140001		a0 = xmem[i1]			# LN: 453 | 
629   	 013E	 09707FFF		a1 = i0			# LN: 453 | 
630   	 013F	 00004480		a0 = a1 + a0			# LN: 453 | 
631   	 0140	 98090030		AnyReg(i0, a0h)			# LN: 453 | 
632   	 0141	 9175020B		i1 = i7 - (0x20b)			# LN: 453 | 
633   	 0142	 88140001		a0 = xmem[i1]			# LN: 453 | 
634   	 0143	 98D40000		ymem[i0] = a0h			# LN: 453 | 
635   	 0144				cline_453_0:			/* LN: 450 | CYCLE: 0 | RULES: () */ 
636   	 0144				init_latch_label_3:			/* LN: 454 | CYCLE: 0 | RULES: () */ 
637   	 0144	 9075020A		i0 = i7 - (0x20a)			# LN: 450 | 
638   	 0145	 88140000		a0 = xmem[i0]			# LN: 450 | 
639   	 0146	 894A0001		uhalfword(a1) = (0x1)			# LN: 450 | 
640   	 0147	 00004408		a0 = a0 + a1			# LN: 450 | 
641   	 0148	 9075020A		i0 = i7 - (0x20a)			# LN: 450 | 
642   	 0149	 98540000		xmem[i0] = a0h			# LN: 450 | 
643   	 014A	 8008012D		jmp (for_5)			# LN: 450 | 
644   	 014B				cline_450_1:			/* LN: 448 | CYCLE: 0 | RULES: () */ 
645   	 014B				init_latch_label_4:			/* LN: 455 | CYCLE: 0 | RULES: () */ 
646   	 014B				for_end_5:			/* LN: 450 | CYCLE: 0 | RULES: () */ 
647   	 014B	 90750004		i0 = i7 - (0x4)			# LN: 448 | 
648   	 014C	 88140000		a0 = xmem[i0]			# LN: 448 | 
649   	 014D	 894A0001		uhalfword(a1) = (0x1)			# LN: 448 | 
650   	 014E	 00004408		a0 = a0 + a1			# LN: 448 | 
651   	 014F	 90750004		i0 = i7 - (0x4)			# LN: 448 | 
652   	 0150				label_end_95:			# LN: 448 | CYCLE: 5 | RULES: ()
653   	 0150	 98540000		xmem[i0] = a0h			# LN: 448 | 
654   	 0151				cline_448_1:			/* LN: 456 | CYCLE: 0 | RULES: () */ 
655   	 0151				for_end_4:			/* LN: 448 | CYCLE: 0 | RULES: () */ 
656   	 0151	 88040000		a0 = xmem[_enable + 0]			# LN: 456 | 
657   	 0152	 00004E80		a0 & a0			# LN: 456 | 
658   	 0153	 84080156		if (a == 0) jmp (else_12)			# LN: 456 | 
659   	 0154				cline_456_0:			/* LN: 457 | CYCLE: 0 | RULES: () */ 
660   	 0154	 80880193		call (_processing)			# LN: 457 | 
661   	 0155	 80080156		jmp (endif_12)			# LN: 457 | 
662   	 0156				cline_457_0:			/* LN: 459 | CYCLE: 0 | RULES: () */ 
663   	 0156				endif_12:			/* LN: 456 | CYCLE: 0 | RULES: () */ 
664   	 0156				else_12:			/* LN: 456 | CYCLE: 0 | RULES: () */ 
665   	 0156	 90750004		i0 = i7 - (0x4)			# LN: 459 | 
666   	 0157	 00004DC0		a0 = 0			# LN: 459 | 
667   	 0158	 98540000		xmem[i0] = a0h			# LN: 459 | 
668   	 0159	 81000180		do (0x10), label_end_96			# LN: 459 | 
669   	 015A				cline_459_0:			/* LN: 461 | CYCLE: 0 | RULES: () */ 
670   	 015A				label_begin_96:			/* LN: 459 | CYCLE: 0 | RULES: () */ 
671   	 015A	 9075020A		i0 = i7 - (0x20a)			# LN: 461 | 
672   	 015B	 00004DC0		a0 = 0			# LN: 461 | 
673   	 015C	 98540000		xmem[i0] = a0h			# LN: 461 | 
674   	 015D				for_7:			/* LN: 461 | CYCLE: 0 | RULES: () */ 
675   	 015D	 9075020A		i0 = i7 - (0x20a)			# LN: 461 | 
676   	 015E	 88140000		a0 = xmem[i0]			# LN: 461 | 
677   	 015F	 89040000		a1 = xmem[_nChannels + 0]			# LN: 461 | 
678   	 0160	 00004F08		a0 - a1			# LN: 461 | 
679   	 0161	 84C8017B		if (a >= 0) jmp (for_end_7)			# LN: 461 | 
680   	 0162				cline_461_0:			/* LN: 463 | CYCLE: 0 | RULES: () */ 
681   	 0162	 9075020A		i0 = i7 - (0x20a)			# LN: 463 | 
682   	 0163	 88140000		a0 = xmem[i0]			# LN: 463 | 
683   	 0164	 00004EC0		a0 = a0 << 4			# LN: 463 | 
684   	 0165	 48707FFF		i0 = a0			# LN: 463 | 
685   	 0166	 91750004		i1 = i7 - (0x4)			# LN: 463 | 
686   	 0167	 80050000		i0 = i0 + (_sampleBuffer + 0)			# LN: 463 | 
687   	 0168	 88140001		a0 = xmem[i1]			# LN: 463 | 
688   	 0169	 09707FFF		a1 = i0			# LN: 463 | 
689   	 016A	 00004480		a0 = a1 + a0			# LN: 463 | 
690   	 016B	 98090030		AnyReg(i0, a0h)			# LN: 463 | 
691   	 016C	 9175020B		i1 = i7 - (0x20b)			# LN: 463 | 
692   	 016D	 88940000		a0 = ymem[i0]			# LN: 463 | 
693   	 016E	 98540001		xmem[i1] = a0h			# LN: 463 | 
694   	 016F				cline_463_0:			/* LN: 464 | CYCLE: 0 | RULES: () */ 
695   	 016F	 90750209		i0 = i7 - (0x209)			# LN: 464 | 
696   	 0170	 9175020B		i1 = i7 - (0x20b)			# LN: 464 | 
697   	 0171	 88140001		a0 = xmem[i1]			# LN: 464 | 
698   	 0172	 B0140000		i0 = xmem[i0]			# LN: 464 | 
699   	 0173	 80880000		call (_cl_wavwrite_sendsample)			# LN: 464 | 
700   	 0174				cline_464_0:			/* LN: 461 | CYCLE: 0 | RULES: () */ 
701   	 0174				init_latch_label_5:			/* LN: 465 | CYCLE: 0 | RULES: () */ 
702   	 0174	 9075020A		i0 = i7 - (0x20a)			# LN: 461 | 
703   	 0175	 88140000		a0 = xmem[i0]			# LN: 461 | 
704   	 0176	 894A0001		uhalfword(a1) = (0x1)			# LN: 461 | 
705   	 0177	 00004408		a0 = a0 + a1			# LN: 461 | 
706   	 0178	 9075020A		i0 = i7 - (0x20a)			# LN: 461 | 
707   	 0179	 98540000		xmem[i0] = a0h			# LN: 461 | 
708   	 017A	 8008015D		jmp (for_7)			# LN: 461 | 
709   	 017B				cline_461_1:			/* LN: 459 | CYCLE: 0 | RULES: () */ 
710   	 017B				init_latch_label_6:			/* LN: 466 | CYCLE: 0 | RULES: () */ 
711   	 017B				for_end_7:			/* LN: 461 | CYCLE: 0 | RULES: () */ 
712   	 017B	 90750004		i0 = i7 - (0x4)			# LN: 459 | 
713   	 017C	 88140000		a0 = xmem[i0]			# LN: 459 | 
714   	 017D	 894A0001		uhalfword(a1) = (0x1)			# LN: 459 | 
715   	 017E	 00004408		a0 = a0 + a1			# LN: 459 | 
716   	 017F	 90750004		i0 = i7 - (0x4)			# LN: 459 | 
717   	 0180				label_end_96:			# LN: 459 | CYCLE: 5 | RULES: ()
718   	 0180	 98540000		xmem[i0] = a0h			# LN: 459 | 
719   	 0181				cline_459_1:			/* LN: 446 | CYCLE: 0 | RULES: () */ 
720   	 0181				init_latch_label_7:			/* LN: 467 | CYCLE: 0 | RULES: () */ 
721   	 0181				for_end_6:			/* LN: 459 | CYCLE: 0 | RULES: () */ 
722   	 0181	 90750003		i0 = i7 - (0x3)			# LN: 446 | 
723   	 0182	 88140000		a0 = xmem[i0]			# LN: 446 | 
724   	 0183	 894A0001		uhalfword(a1) = (0x1)			# LN: 446 | 
725   	 0184	 00004408		a0 = a0 + a1			# LN: 446 | 
726   	 0185	 90750003		i0 = i7 - (0x3)			# LN: 446 | 
727   	 0186	 98540000		xmem[i0] = a0h			# LN: 446 | 
728   	 0187	 80080121		jmp (for_3)			# LN: 446 | 
729   	 0188				cline_446_1:			/* LN: 472 | CYCLE: 0 | RULES: () */ 
730   	 0188				for_end_3:			/* LN: 446 | CYCLE: 0 | RULES: () */ 
731   	 0188	 90750105		i0 = i7 - (0x105)			# LN: 472 | 
732   	 0189	 B0140000		i0 = xmem[i0]			# LN: 472 | 
733   	 018A	 80880000		call (_cl_wavread_close)			# LN: 472 | 
734   	 018B				cline_472_0:			/* LN: 473 | CYCLE: 0 | RULES: () */ 
735   	 018B	 90750209		i0 = i7 - (0x209)			# LN: 473 | 
736   	 018C	 B0140000		i0 = xmem[i0]			# LN: 473 | 
737   	 018D	 80880000		call (_cl_wavwrite_close)			# LN: 473 | 
738   	 018E				cline_473_0:			/* LN: 476 | CYCLE: 0 | RULES: () */ 
739   	 018E	 00004DC0		a0 = 0			# LN: 476 | 
740   	 018F	 80080190		jmp (__epilogue_250)			# LN: 476 | 
741   	 0190				cline_476_0:			/* LN: 477 | CYCLE: 0 | RULES: () */ 
742   	 0190				__epilogue_250:			/* LN: 477 | CYCLE: 0 | RULES: () */ 
743   	 0190	 9775020B		i7 = i7 - (0x20b)			# LN: 477 | 
744   	 0191	 02177FFF		i7 -= 1			# LN: 477 | 
745   	 0192	 81880000		ret			# LN: 477 | 
746   						
747   						
748   						
749   	 0193				_processing:			/* LN: 161 | CYCLE: 0 | RULES: () */ 
750   	 0193	 BB540007		xmem[i7] = i7			# LN: 161 | 
751   	 0194	 020F7FFF		i7 += 1			# LN: 161 | 
752   	 0195	 B2540017		xmem[i7] = i2; i7 += 1			# LN: 161, 161 | 
753   	 0196	 87750001		i7 = i7 + (0x1)			# LN: 161 | 
754   	 0197				cline_161_0:			/* LN: 165 | CYCLE: 0 | RULES: () */ 
755   	 0197	 A0050000		i0 = (0) + (_sampleBuffer + 0)			# LN: 165 | 
756   	 0198	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 165 | 
757   	 0199				cline_165_0:			/* LN: 166 | CYCLE: 0 | RULES: () */ 
758   	 0199	 A0050010		i0 = (0) + (_sampleBuffer + 16)			# LN: 166 | 
759   	 019A	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 166 | 
760   	 019B				cline_166_0:			/* LN: 167 | CYCLE: 0 | RULES: () */ 
761   	 019B	 A0050020		i0 = (0) + (_sampleBuffer + 32)			# LN: 167 | 
762   	 019C	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 167 | 
763   	 019D				cline_167_0:			/* LN: 168 | CYCLE: 0 | RULES: () */ 
764   	 019D	 A0050030		i0 = (0) + (_sampleBuffer + 48)			# LN: 168 | 
765   	 019E	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 168 | 
766   	 019F				cline_168_0:			/* LN: 169 | CYCLE: 0 | RULES: () */ 
767   	 019F	 A0050040		i0 = (0) + (_sampleBuffer + 64)			# LN: 169 | 
768   	 01A0	 B0440000		xmem[_sb_ptr4 + 0] = i0			# LN: 169 | 
769   	 01A1				cline_169_0:			/* LN: 170 | CYCLE: 0 | RULES: () */ 
770   	 01A1	 A0050050		i0 = (0) + (_sampleBuffer + 80)			# LN: 170 | 
771   	 01A2	 B0440000		xmem[_sb_ptr5 + 0] = i0			# LN: 170 | 
772   	 01A3				cline_170_0:			/* LN: 171 | CYCLE: 0 | RULES: () */ 
773   	 01A3	 A0050060		i0 = (0) + (_sampleBuffer + 96)			# LN: 171 | 
774   	 01A4	 B0440000		xmem[_sb_ptr6 + 0] = i0			# LN: 171 | 
775   	 01A5				cline_171_0:			/* LN: 172 | CYCLE: 0 | RULES: () */ 
776   	 01A5	 A0050070		i0 = (0) + (_sampleBuffer + 112)			# LN: 172 | 
777   	 01A6	 B0440000		xmem[_sb_ptr7 + 0] = i0			# LN: 172 | 
778   	 01A7				cline_172_0:			/* LN: 174 | CYCLE: 0 | RULES: () */ 
779   	 01A7	 90750001		i0 = i7 - (0x1)			# LN: 174 | 
780   	 01A8	 00004DC0		a0 = 0			# LN: 174 | 
781   	 01A9	 98540000		xmem[i0] = a0h			# LN: 174 | 
782   	 01AA	 8100057B		do (0x10), label_end_92			# LN: 174 | 
783   	 01AB				cline_174_0:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
784   	 01AB				label_begin_92:			/* LN: 174 | CYCLE: 0 | RULES: () */ 
785   	 01AB	 88040000		a0 = xmem[_nChannels + 0]			# LN: 176 | 
786   	 01AC	 894A0001		uhalfword(a1) = (0x1)			# LN: 176 | 
787   	 01AD	 00004F08		a0 - a1			# LN: 176 | 
788   	 01AE	 844801CA		if (a != 0) jmp (else_2)			# LN: 176 | 
789   	 01AF				cline_176_0:			/* LN: 178 | CYCLE: 0 | RULES: () */ 
790   	 01AF	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 178 | 
791   	 01B0	 A1050000		i1 = (0) + (_z_xH)			# LN: 178 | 
792   	 01B1	 88940000		a0 = ymem[i0]			# LN: 178 | 
793   	 01B2	 A4050000		i4 = (0) + (_z_yH)			# LN: 178 | 
794   	 01B3	 B1090030		i0 = i1			# LN: 178 | 
795   	 01B4	 B8090031		i1 = i4			# LN: 178 | 
796   	 01B5	 80880581		call (_shelvingHP)			# LN: 178 | 
797   	 01B6	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 178 | 
798   	 01B7	 B0140000		i0 = xmem[i0]			# LN: 178 | 
799   	 01B8	 00007FFF		nop #empty cycle
800   	 01B9	 98D40000		ymem[i0] = a0h			# LN: 178 | 
801   	 01BA				cline_178_0:			/* LN: 179 | CYCLE: 0 | RULES: () */ 
802   	 01BA	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 179 | 
803   	 01BB	 A1050000		i1 = (0) + (_z_xL)			# LN: 179 | 
804   	 01BC	 88940000		a0 = ymem[i0]			# LN: 179 | 
805   	 01BD	 A4050000		i4 = (0) + (_z_yL)			# LN: 179 | 
806   	 01BE	 B1090030		i0 = i1			# LN: 179 | 
807   	 01BF	 B8090031		i1 = i4			# LN: 179 | 
808   	 01C0	 808805B5		call (_shelvingLP)			# LN: 179 | 
809   	 01C1	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 179 | 
810   	 01C2	 B0140000		i0 = xmem[i0]			# LN: 179 | 
811   	 01C3	 00007FFF		nop #empty cycle
812   	 01C4	 98D40000		ymem[i0] = a0h			# LN: 179 | 
813   	 01C5				cline_179_0:			/* LN: 180 | CYCLE: 0 | RULES: () */ 
814   	 01C5	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 180 | 
815   	 01C6	 00007FFF		nop #empty cycle
816   	 01C7	 02087FFF		i0 += 1			# LN: 180 | 
817   	 01C8	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 180 | 
818   	 01C9	 80080576		jmp (endif_2)			# LN: 180 | 
819   	 01CA				cline_180_0:			/* LN: 182 | CYCLE: 0 | RULES: () */ 
820   	 01CA				else_2:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
821   	 01CA	 88040000		a0 = xmem[_nChannels + 0]			# LN: 182 | 
822   	 01CB	 894A0002		uhalfword(a1) = (0x2)			# LN: 182 | 
823   	 01CC	 00004F08		a0 - a1			# LN: 182 | 
824   	 01CD	 84480203		if (a != 0) jmp (else_3)			# LN: 182 | 
825   	 01CE				cline_182_0:			/* LN: 184 | CYCLE: 0 | RULES: () */ 
826   	 01CE	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 184 | 
827   	 01CF	 A1050000		i1 = (0) + (_z_xH)			# LN: 184 | 
828   	 01D0	 88940000		a0 = ymem[i0]			# LN: 184 | 
829   	 01D1	 A4050000		i4 = (0) + (_z_yH)			# LN: 184 | 
830   	 01D2	 B1090030		i0 = i1			# LN: 184 | 
831   	 01D3	 B8090031		i1 = i4			# LN: 184 | 
832   	 01D4	 80880581		call (_shelvingHP)			# LN: 184 | 
833   	 01D5	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 184 | 
834   	 01D6	 B0140000		i0 = xmem[i0]			# LN: 184 | 
835   	 01D7	 00007FFF		nop #empty cycle
836   	 01D8	 98D40000		ymem[i0] = a0h			# LN: 184 | 
837   	 01D9				cline_184_0:			/* LN: 185 | CYCLE: 0 | RULES: () */ 
838   	 01D9	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 185 | 
839   	 01DA	 A1050000		i1 = (0) + (_z_xL)			# LN: 185 | 
840   	 01DB	 88940000		a0 = ymem[i0]			# LN: 185 | 
841   	 01DC	 A4050000		i4 = (0) + (_z_yL)			# LN: 185 | 
842   	 01DD	 B1090030		i0 = i1			# LN: 185 | 
843   	 01DE	 B8090031		i1 = i4			# LN: 185 | 
844   	 01DF	 808805B5		call (_shelvingLP)			# LN: 185 | 
845   	 01E0	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 185 | 
846   	 01E1	 B0140000		i0 = xmem[i0]			# LN: 185 | 
847   	 01E2	 00007FFF		nop #empty cycle
848   	 01E3	 98D40000		ymem[i0] = a0h			# LN: 185 | 
849   	 01E4				cline_185_0:			/* LN: 186 | CYCLE: 0 | RULES: () */ 
850   	 01E4	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 186 | 
851   	 01E5	 00007FFF		nop #empty cycle
852   	 01E6	 02087FFF		i0 += 1			# LN: 186 | 
853   	 01E7	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 186 | 
854   	 01E8				cline_186_0:			/* LN: 188 | CYCLE: 0 | RULES: () */ 
855   	 01E8	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 188 | 
856   	 01E9	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 188 | 
857   	 01EA	 88940000		a0 = ymem[i0]			# LN: 188 | 
858   	 01EB	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 188 | 
859   	 01EC	 B1090030		i0 = i1			# LN: 188 | 
860   	 01ED	 B8090031		i1 = i4			# LN: 188 | 
861   	 01EE	 80880581		call (_shelvingHP)			# LN: 188 | 
862   	 01EF	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 188 | 
863   	 01F0	 B0140000		i0 = xmem[i0]			# LN: 188 | 
864   	 01F1	 00007FFF		nop #empty cycle
865   	 01F2	 98D40000		ymem[i0] = a0h			# LN: 188 | 
866   	 01F3				cline_188_0:			/* LN: 189 | CYCLE: 0 | RULES: () */ 
867   	 01F3	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 189 | 
868   	 01F4	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 189 | 
869   	 01F5	 88940000		a0 = ymem[i0]			# LN: 189 | 
870   	 01F6	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 189 | 
871   	 01F7	 B1090030		i0 = i1			# LN: 189 | 
872   	 01F8	 B8090031		i1 = i4			# LN: 189 | 
873   	 01F9	 808805B5		call (_shelvingLP)			# LN: 189 | 
874   	 01FA	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 189 | 
875   	 01FB	 B0140000		i0 = xmem[i0]			# LN: 189 | 
876   	 01FC	 00007FFF		nop #empty cycle
877   	 01FD	 98D40000		ymem[i0] = a0h			# LN: 189 | 
878   	 01FE				cline_189_0:			/* LN: 190 | CYCLE: 0 | RULES: () */ 
879   	 01FE	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 190 | 
880   	 01FF	 00007FFF		nop #empty cycle
881   	 0200	 02087FFF		i0 += 1			# LN: 190 | 
882   	 0201	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 190 | 
883   	 0202	 80080576		jmp (endif_3)			# LN: 190 | 
884   	 0203				cline_190_0:			/* LN: 193 | CYCLE: 0 | RULES: () */ 
885   	 0203				else_3:			/* LN: 182 | CYCLE: 0 | RULES: () */ 
886   	 0203	 88040000		a0 = xmem[_nChannels + 0]			# LN: 193 | 
887   	 0204	 894A0003		uhalfword(a1) = (0x3)			# LN: 193 | 
888   	 0205	 00004F08		a0 - a1			# LN: 193 | 
889   	 0206	 84480256		if (a != 0) jmp (else_4)			# LN: 193 | 
890   	 0207				cline_193_0:			/* LN: 195 | CYCLE: 0 | RULES: () */ 
891   	 0207	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 195 | 
892   	 0208	 A1050000		i1 = (0) + (_z_xH)			# LN: 195 | 
893   	 0209	 88940000		a0 = ymem[i0]			# LN: 195 | 
894   	 020A	 A4050000		i4 = (0) + (_z_yH)			# LN: 195 | 
895   	 020B	 B1090030		i0 = i1			# LN: 195 | 
896   	 020C	 B8090031		i1 = i4			# LN: 195 | 
897   	 020D	 80880581		call (_shelvingHP)			# LN: 195 | 
898   	 020E	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 195 | 
899   	 020F	 B0140000		i0 = xmem[i0]			# LN: 195 | 
900   	 0210	 00007FFF		nop #empty cycle
901   	 0211	 98D40000		ymem[i0] = a0h			# LN: 195 | 
902   	 0212				cline_195_0:			/* LN: 196 | CYCLE: 0 | RULES: () */ 
903   	 0212	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 196 | 
904   	 0213	 A1050000		i1 = (0) + (_z_xL)			# LN: 196 | 
905   	 0214	 88940000		a0 = ymem[i0]			# LN: 196 | 
906   	 0215	 A4050000		i4 = (0) + (_z_yL)			# LN: 196 | 
907   	 0216	 B1090030		i0 = i1			# LN: 196 | 
908   	 0217	 B8090031		i1 = i4			# LN: 196 | 
909   	 0218	 808805B5		call (_shelvingLP)			# LN: 196 | 
910   	 0219	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 196 | 
911   	 021A	 B0140000		i0 = xmem[i0]			# LN: 196 | 
912   	 021B	 00007FFF		nop #empty cycle
913   	 021C	 98D40000		ymem[i0] = a0h			# LN: 196 | 
914   	 021D				cline_196_0:			/* LN: 197 | CYCLE: 0 | RULES: () */ 
915   	 021D	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 197 | 
916   	 021E	 00007FFF		nop #empty cycle
917   	 021F	 02087FFF		i0 += 1			# LN: 197 | 
918   	 0220	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 197 | 
919   	 0221				cline_197_0:			/* LN: 199 | CYCLE: 0 | RULES: () */ 
920   	 0221	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 199 | 
921   	 0222	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 199 | 
922   	 0223	 88940000		a0 = ymem[i0]			# LN: 199 | 
923   	 0224	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 199 | 
924   	 0225	 B1090030		i0 = i1			# LN: 199 | 
925   	 0226	 B8090031		i1 = i4			# LN: 199 | 
926   	 0227	 80880581		call (_shelvingHP)			# LN: 199 | 
927   	 0228	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 199 | 
928   	 0229	 B0140000		i0 = xmem[i0]			# LN: 199 | 
929   	 022A	 00007FFF		nop #empty cycle
930   	 022B	 98D40000		ymem[i0] = a0h			# LN: 199 | 
931   	 022C				cline_199_0:			/* LN: 200 | CYCLE: 0 | RULES: () */ 
932   	 022C	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 200 | 
933   	 022D	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 200 | 
934   	 022E	 88940000		a0 = ymem[i0]			# LN: 200 | 
935   	 022F	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 200 | 
936   	 0230	 B1090030		i0 = i1			# LN: 200 | 
937   	 0231	 B8090031		i1 = i4			# LN: 200 | 
938   	 0232	 808805B5		call (_shelvingLP)			# LN: 200 | 
939   	 0233	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 200 | 
940   	 0234	 B0140000		i0 = xmem[i0]			# LN: 200 | 
941   	 0235	 00007FFF		nop #empty cycle
942   	 0236	 98D40000		ymem[i0] = a0h			# LN: 200 | 
943   	 0237				cline_200_0:			/* LN: 201 | CYCLE: 0 | RULES: () */ 
944   	 0237	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 201 | 
945   	 0238	 00007FFF		nop #empty cycle
946   	 0239	 02087FFF		i0 += 1			# LN: 201 | 
947   	 023A	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 201 | 
948   	 023B				cline_201_0:			/* LN: 203 | CYCLE: 0 | RULES: () */ 
949   	 023B	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 203 | 
950   	 023C	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 203 | 
951   	 023D	 88940000		a0 = ymem[i0]			# LN: 203 | 
952   	 023E	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 203 | 
953   	 023F	 B1090030		i0 = i1			# LN: 203 | 
954   	 0240	 B8090031		i1 = i4			# LN: 203 | 
955   	 0241	 80880581		call (_shelvingHP)			# LN: 203 | 
956   	 0242	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 203 | 
957   	 0243	 B0140000		i0 = xmem[i0]			# LN: 203 | 
958   	 0244	 00007FFF		nop #empty cycle
959   	 0245	 98D40000		ymem[i0] = a0h			# LN: 203 | 
960   	 0246				cline_203_0:			/* LN: 204 | CYCLE: 0 | RULES: () */ 
961   	 0246	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 204 | 
962   	 0247	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 204 | 
963   	 0248	 88940000		a0 = ymem[i0]			# LN: 204 | 
964   	 0249	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 204 | 
965   	 024A	 B1090030		i0 = i1			# LN: 204 | 
966   	 024B	 B8090031		i1 = i4			# LN: 204 | 
967   	 024C	 808805B5		call (_shelvingLP)			# LN: 204 | 
968   	 024D	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 204 | 
969   	 024E	 B0140000		i0 = xmem[i0]			# LN: 204 | 
970   	 024F	 00007FFF		nop #empty cycle
971   	 0250	 98D40000		ymem[i0] = a0h			# LN: 204 | 
972   	 0251				cline_204_0:			/* LN: 205 | CYCLE: 0 | RULES: () */ 
973   	 0251	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 205 | 
974   	 0252	 00007FFF		nop #empty cycle
975   	 0253	 02087FFF		i0 += 1			# LN: 205 | 
976   	 0254	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 205 | 
977   	 0255	 80080576		jmp (endif_4)			# LN: 205 | 
978   	 0256				cline_205_0:			/* LN: 207 | CYCLE: 0 | RULES: () */ 
979   	 0256				else_4:			/* LN: 193 | CYCLE: 0 | RULES: () */ 
980   	 0256	 88040000		a0 = xmem[_nChannels + 0]			# LN: 207 | 
981   	 0257	 894A0004		uhalfword(a1) = (0x4)			# LN: 207 | 
982   	 0258	 00004F08		a0 - a1			# LN: 207 | 
983   	 0259	 844802C3		if (a != 0) jmp (else_5)			# LN: 207 | 
984   	 025A				cline_207_0:			/* LN: 210 | CYCLE: 0 | RULES: () */ 
985   	 025A	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 210 | 
986   	 025B	 A1050000		i1 = (0) + (_z_xH)			# LN: 210 | 
987   	 025C	 88940000		a0 = ymem[i0]			# LN: 210 | 
988   	 025D	 A4050000		i4 = (0) + (_z_yH)			# LN: 210 | 
989   	 025E	 B1090030		i0 = i1			# LN: 210 | 
990   	 025F	 B8090031		i1 = i4			# LN: 210 | 
991   	 0260	 80880581		call (_shelvingHP)			# LN: 210 | 
992   	 0261	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 210 | 
993   	 0262	 B0140000		i0 = xmem[i0]			# LN: 210 | 
994   	 0263	 00007FFF		nop #empty cycle
995   	 0264	 98D40000		ymem[i0] = a0h			# LN: 210 | 
996   	 0265				cline_210_0:			/* LN: 211 | CYCLE: 0 | RULES: () */ 
997   	 0265	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 211 | 
998   	 0266	 A1050000		i1 = (0) + (_z_xL)			# LN: 211 | 
999   	 0267	 88940000		a0 = ymem[i0]			# LN: 211 | 
1000  	 0268	 A4050000		i4 = (0) + (_z_yL)			# LN: 211 | 
1001  	 0269	 B1090030		i0 = i1			# LN: 211 | 
1002  	 026A	 B8090031		i1 = i4			# LN: 211 | 
1003  	 026B	 808805B5		call (_shelvingLP)			# LN: 211 | 
1004  	 026C	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 211 | 
1005  	 026D	 B0140000		i0 = xmem[i0]			# LN: 211 | 
1006  	 026E	 00007FFF		nop #empty cycle
1007  	 026F	 98D40000		ymem[i0] = a0h			# LN: 211 | 
1008  	 0270				cline_211_0:			/* LN: 212 | CYCLE: 0 | RULES: () */ 
1009  	 0270	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 212 | 
1010  	 0271	 00007FFF		nop #empty cycle
1011  	 0272	 02087FFF		i0 += 1			# LN: 212 | 
1012  	 0273	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 212 | 
1013  	 0274				cline_212_0:			/* LN: 214 | CYCLE: 0 | RULES: () */ 
1014  	 0274	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 214 | 
1015  	 0275	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 214 | 
1016  	 0276	 88940000		a0 = ymem[i0]			# LN: 214 | 
1017  	 0277	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 214 | 
1018  	 0278	 B1090030		i0 = i1			# LN: 214 | 
1019  	 0279	 B8090031		i1 = i4			# LN: 214 | 
1020  	 027A	 80880581		call (_shelvingHP)			# LN: 214 | 
1021  	 027B	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 214 | 
1022  	 027C	 B0140000		i0 = xmem[i0]			# LN: 214 | 
1023  	 027D	 00007FFF		nop #empty cycle
1024  	 027E	 98D40000		ymem[i0] = a0h			# LN: 214 | 
1025  	 027F				cline_214_0:			/* LN: 215 | CYCLE: 0 | RULES: () */ 
1026  	 027F	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 215 | 
1027  	 0280	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 215 | 
1028  	 0281	 88940000		a0 = ymem[i0]			# LN: 215 | 
1029  	 0282	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 215 | 
1030  	 0283	 B1090030		i0 = i1			# LN: 215 | 
1031  	 0284	 B8090031		i1 = i4			# LN: 215 | 
1032  	 0285	 808805B5		call (_shelvingLP)			# LN: 215 | 
1033  	 0286	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 215 | 
1034  	 0287	 B0140000		i0 = xmem[i0]			# LN: 215 | 
1035  	 0288	 00007FFF		nop #empty cycle
1036  	 0289	 98D40000		ymem[i0] = a0h			# LN: 215 | 
1037  	 028A				cline_215_0:			/* LN: 216 | CYCLE: 0 | RULES: () */ 
1038  	 028A	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 216 | 
1039  	 028B	 00007FFF		nop #empty cycle
1040  	 028C	 02087FFF		i0 += 1			# LN: 216 | 
1041  	 028D	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 216 | 
1042  	 028E				cline_216_0:			/* LN: 218 | CYCLE: 0 | RULES: () */ 
1043  	 028E	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 218 | 
1044  	 028F	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 218 | 
1045  	 0290	 88940000		a0 = ymem[i0]			# LN: 218 | 
1046  	 0291	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 218 | 
1047  	 0292	 B1090030		i0 = i1			# LN: 218 | 
1048  	 0293	 B8090031		i1 = i4			# LN: 218 | 
1049  	 0294	 80880581		call (_shelvingHP)			# LN: 218 | 
1050  	 0295	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 218 | 
1051  	 0296	 B0140000		i0 = xmem[i0]			# LN: 218 | 
1052  	 0297	 00007FFF		nop #empty cycle
1053  	 0298	 98D40000		ymem[i0] = a0h			# LN: 218 | 
1054  	 0299				cline_218_0:			/* LN: 219 | CYCLE: 0 | RULES: () */ 
1055  	 0299	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 219 | 
1056  	 029A	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 219 | 
1057  	 029B	 88940000		a0 = ymem[i0]			# LN: 219 | 
1058  	 029C	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 219 | 
1059  	 029D	 B1090030		i0 = i1			# LN: 219 | 
1060  	 029E	 B8090031		i1 = i4			# LN: 219 | 
1061  	 029F	 808805B5		call (_shelvingLP)			# LN: 219 | 
1062  	 02A0	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 219 | 
1063  	 02A1	 B0140000		i0 = xmem[i0]			# LN: 219 | 
1064  	 02A2	 00007FFF		nop #empty cycle
1065  	 02A3	 98D40000		ymem[i0] = a0h			# LN: 219 | 
1066  	 02A4				cline_219_0:			/* LN: 220 | CYCLE: 0 | RULES: () */ 
1067  	 02A4	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 220 | 
1068  	 02A5	 00007FFF		nop #empty cycle
1069  	 02A6	 02087FFF		i0 += 1			# LN: 220 | 
1070  	 02A7	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 220 | 
1071  	 02A8				cline_220_0:			/* LN: 222 | CYCLE: 0 | RULES: () */ 
1072  	 02A8	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 222 | 
1073  	 02A9	 A1050006		i1 = (0) + (_z_xH + 6)			# LN: 222 | 
1074  	 02AA	 88940000		a0 = ymem[i0]			# LN: 222 | 
1075  	 02AB	 A4050006		i4 = (0) + (_z_yH + 6)			# LN: 222 | 
1076  	 02AC	 B1090030		i0 = i1			# LN: 222 | 
1077  	 02AD	 B8090031		i1 = i4			# LN: 222 | 
1078  	 02AE	 80880581		call (_shelvingHP)			# LN: 222 | 
1079  	 02AF	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 222 | 
1080  	 02B0	 B0140000		i0 = xmem[i0]			# LN: 222 | 
1081  	 02B1	 00007FFF		nop #empty cycle
1082  	 02B2	 98D40000		ymem[i0] = a0h			# LN: 222 | 
1083  	 02B3				cline_222_0:			/* LN: 223 | CYCLE: 0 | RULES: () */ 
1084  	 02B3	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 223 | 
1085  	 02B4	 A1050006		i1 = (0) + (_z_xL + 6)			# LN: 223 | 
1086  	 02B5	 88940000		a0 = ymem[i0]			# LN: 223 | 
1087  	 02B6	 A4050006		i4 = (0) + (_z_yL + 6)			# LN: 223 | 
1088  	 02B7	 B1090030		i0 = i1			# LN: 223 | 
1089  	 02B8	 B8090031		i1 = i4			# LN: 223 | 
1090  	 02B9	 808805B5		call (_shelvingLP)			# LN: 223 | 
1091  	 02BA	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 223 | 
1092  	 02BB	 B0140000		i0 = xmem[i0]			# LN: 223 | 
1093  	 02BC	 00007FFF		nop #empty cycle
1094  	 02BD	 98D40000		ymem[i0] = a0h			# LN: 223 | 
1095  	 02BE				cline_223_0:			/* LN: 224 | CYCLE: 0 | RULES: () */ 
1096  	 02BE	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 224 | 
1097  	 02BF	 00007FFF		nop #empty cycle
1098  	 02C0	 02087FFF		i0 += 1			# LN: 224 | 
1099  	 02C1	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 224 | 
1100  	 02C2	 80080576		jmp (endif_5)			# LN: 224 | 
1101  	 02C3				cline_224_0:			/* LN: 227 | CYCLE: 0 | RULES: () */ 
1102  	 02C3				else_5:			/* LN: 207 | CYCLE: 0 | RULES: () */ 
1103  	 02C3	 88040000		a0 = xmem[_nChannels + 0]			# LN: 227 | 
1104  	 02C4	 894A0005		uhalfword(a1) = (0x5)			# LN: 227 | 
1105  	 02C5	 00004F08		a0 - a1			# LN: 227 | 
1106  	 02C6	 8448034A		if (a != 0) jmp (else_6)			# LN: 227 | 
1107  	 02C7				cline_227_0:			/* LN: 229 | CYCLE: 0 | RULES: () */ 
1108  	 02C7	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 229 | 
1109  	 02C8	 A1050000		i1 = (0) + (_z_xH)			# LN: 229 | 
1110  	 02C9	 88940000		a0 = ymem[i0]			# LN: 229 | 
1111  	 02CA	 A4050000		i4 = (0) + (_z_yH)			# LN: 229 | 
1112  	 02CB	 B1090030		i0 = i1			# LN: 229 | 
1113  	 02CC	 B8090031		i1 = i4			# LN: 229 | 
1114  	 02CD	 80880581		call (_shelvingHP)			# LN: 229 | 
1115  	 02CE	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 229 | 
1116  	 02CF	 B0140000		i0 = xmem[i0]			# LN: 229 | 
1117  	 02D0	 00007FFF		nop #empty cycle
1118  	 02D1	 98D40000		ymem[i0] = a0h			# LN: 229 | 
1119  	 02D2				cline_229_0:			/* LN: 230 | CYCLE: 0 | RULES: () */ 
1120  	 02D2	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 230 | 
1121  	 02D3	 A1050000		i1 = (0) + (_z_xL)			# LN: 230 | 
1122  	 02D4	 88940000		a0 = ymem[i0]			# LN: 230 | 
1123  	 02D5	 A4050000		i4 = (0) + (_z_yL)			# LN: 230 | 
1124  	 02D6	 B1090030		i0 = i1			# LN: 230 | 
1125  	 02D7	 B8090031		i1 = i4			# LN: 230 | 
1126  	 02D8	 808805B5		call (_shelvingLP)			# LN: 230 | 
1127  	 02D9	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 230 | 
1128  	 02DA	 B0140000		i0 = xmem[i0]			# LN: 230 | 
1129  	 02DB	 00007FFF		nop #empty cycle
1130  	 02DC	 98D40000		ymem[i0] = a0h			# LN: 230 | 
1131  	 02DD				cline_230_0:			/* LN: 231 | CYCLE: 0 | RULES: () */ 
1132  	 02DD	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 231 | 
1133  	 02DE	 00007FFF		nop #empty cycle
1134  	 02DF	 02087FFF		i0 += 1			# LN: 231 | 
1135  	 02E0	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 231 | 
1136  	 02E1				cline_231_0:			/* LN: 233 | CYCLE: 0 | RULES: () */ 
1137  	 02E1	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 233 | 
1138  	 02E2	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 233 | 
1139  	 02E3	 88940000		a0 = ymem[i0]			# LN: 233 | 
1140  	 02E4	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 233 | 
1141  	 02E5	 B1090030		i0 = i1			# LN: 233 | 
1142  	 02E6	 B8090031		i1 = i4			# LN: 233 | 
1143  	 02E7	 80880581		call (_shelvingHP)			# LN: 233 | 
1144  	 02E8	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 233 | 
1145  	 02E9	 B0140000		i0 = xmem[i0]			# LN: 233 | 
1146  	 02EA	 00007FFF		nop #empty cycle
1147  	 02EB	 98D40000		ymem[i0] = a0h			# LN: 233 | 
1148  	 02EC				cline_233_0:			/* LN: 234 | CYCLE: 0 | RULES: () */ 
1149  	 02EC	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 234 | 
1150  	 02ED	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 234 | 
1151  	 02EE	 88940000		a0 = ymem[i0]			# LN: 234 | 
1152  	 02EF	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 234 | 
1153  	 02F0	 B1090030		i0 = i1			# LN: 234 | 
1154  	 02F1	 B8090031		i1 = i4			# LN: 234 | 
1155  	 02F2	 808805B5		call (_shelvingLP)			# LN: 234 | 
1156  	 02F3	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 234 | 
1157  	 02F4	 B0140000		i0 = xmem[i0]			# LN: 234 | 
1158  	 02F5	 00007FFF		nop #empty cycle
1159  	 02F6	 98D40000		ymem[i0] = a0h			# LN: 234 | 
1160  	 02F7				cline_234_0:			/* LN: 235 | CYCLE: 0 | RULES: () */ 
1161  	 02F7	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 235 | 
1162  	 02F8	 00007FFF		nop #empty cycle
1163  	 02F9	 02087FFF		i0 += 1			# LN: 235 | 
1164  	 02FA	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 235 | 
1165  	 02FB				cline_235_0:			/* LN: 237 | CYCLE: 0 | RULES: () */ 
1166  	 02FB	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 237 | 
1167  	 02FC	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 237 | 
1168  	 02FD	 88940000		a0 = ymem[i0]			# LN: 237 | 
1169  	 02FE	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 237 | 
1170  	 02FF	 B1090030		i0 = i1			# LN: 237 | 
1171  	 0300	 B8090031		i1 = i4			# LN: 237 | 
1172  	 0301	 80880581		call (_shelvingHP)			# LN: 237 | 
1173  	 0302	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 237 | 
1174  	 0303	 B0140000		i0 = xmem[i0]			# LN: 237 | 
1175  	 0304	 00007FFF		nop #empty cycle
1176  	 0305	 98D40000		ymem[i0] = a0h			# LN: 237 | 
1177  	 0306				cline_237_0:			/* LN: 238 | CYCLE: 0 | RULES: () */ 
1178  	 0306	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 238 | 
1179  	 0307	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 238 | 
1180  	 0308	 88940000		a0 = ymem[i0]			# LN: 238 | 
1181  	 0309	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 238 | 
1182  	 030A	 B1090030		i0 = i1			# LN: 238 | 
1183  	 030B	 B8090031		i1 = i4			# LN: 238 | 
1184  	 030C	 808805B5		call (_shelvingLP)			# LN: 238 | 
1185  	 030D	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 238 | 
1186  	 030E	 B0140000		i0 = xmem[i0]			# LN: 238 | 
1187  	 030F	 00007FFF		nop #empty cycle
1188  	 0310	 98D40000		ymem[i0] = a0h			# LN: 238 | 
1189  	 0311				cline_238_0:			/* LN: 239 | CYCLE: 0 | RULES: () */ 
1190  	 0311	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 239 | 
1191  	 0312	 00007FFF		nop #empty cycle
1192  	 0313	 02087FFF		i0 += 1			# LN: 239 | 
1193  	 0314	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 239 | 
1194  	 0315				cline_239_0:			/* LN: 241 | CYCLE: 0 | RULES: () */ 
1195  	 0315	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 241 | 
1196  	 0316	 A1050006		i1 = (0) + (_z_xH + 6)			# LN: 241 | 
1197  	 0317	 88940000		a0 = ymem[i0]			# LN: 241 | 
1198  	 0318	 A4050006		i4 = (0) + (_z_yH + 6)			# LN: 241 | 
1199  	 0319	 B1090030		i0 = i1			# LN: 241 | 
1200  	 031A	 B8090031		i1 = i4			# LN: 241 | 
1201  	 031B	 80880581		call (_shelvingHP)			# LN: 241 | 
1202  	 031C	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 241 | 
1203  	 031D	 B0140000		i0 = xmem[i0]			# LN: 241 | 
1204  	 031E	 00007FFF		nop #empty cycle
1205  	 031F	 98D40000		ymem[i0] = a0h			# LN: 241 | 
1206  	 0320				cline_241_0:			/* LN: 242 | CYCLE: 0 | RULES: () */ 
1207  	 0320	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 242 | 
1208  	 0321	 A1050006		i1 = (0) + (_z_xL + 6)			# LN: 242 | 
1209  	 0322	 88940000		a0 = ymem[i0]			# LN: 242 | 
1210  	 0323	 A4050006		i4 = (0) + (_z_yL + 6)			# LN: 242 | 
1211  	 0324	 B1090030		i0 = i1			# LN: 242 | 
1212  	 0325	 B8090031		i1 = i4			# LN: 242 | 
1213  	 0326	 808805B5		call (_shelvingLP)			# LN: 242 | 
1214  	 0327	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 242 | 
1215  	 0328	 B0140000		i0 = xmem[i0]			# LN: 242 | 
1216  	 0329	 00007FFF		nop #empty cycle
1217  	 032A	 98D40000		ymem[i0] = a0h			# LN: 242 | 
1218  	 032B				cline_242_0:			/* LN: 243 | CYCLE: 0 | RULES: () */ 
1219  	 032B	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 243 | 
1220  	 032C	 00007FFF		nop #empty cycle
1221  	 032D	 02087FFF		i0 += 1			# LN: 243 | 
1222  	 032E	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 243 | 
1223  	 032F				cline_243_0:			/* LN: 245 | CYCLE: 0 | RULES: () */ 
1224  	 032F	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 245 | 
1225  	 0330	 A1050008		i1 = (0) + (_z_xH + 8)			# LN: 245 | 
1226  	 0331	 88940000		a0 = ymem[i0]			# LN: 245 | 
1227  	 0332	 A4050008		i4 = (0) + (_z_yH + 8)			# LN: 245 | 
1228  	 0333	 B1090030		i0 = i1			# LN: 245 | 
1229  	 0334	 B8090031		i1 = i4			# LN: 245 | 
1230  	 0335	 80880581		call (_shelvingHP)			# LN: 245 | 
1231  	 0336	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 245 | 
1232  	 0337	 B0140000		i0 = xmem[i0]			# LN: 245 | 
1233  	 0338	 00007FFF		nop #empty cycle
1234  	 0339	 98D40000		ymem[i0] = a0h			# LN: 245 | 
1235  	 033A				cline_245_0:			/* LN: 246 | CYCLE: 0 | RULES: () */ 
1236  	 033A	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 246 | 
1237  	 033B	 A1050008		i1 = (0) + (_z_xL + 8)			# LN: 246 | 
1238  	 033C	 88940000		a0 = ymem[i0]			# LN: 246 | 
1239  	 033D	 A4050008		i4 = (0) + (_z_yL + 8)			# LN: 246 | 
1240  	 033E	 B1090030		i0 = i1			# LN: 246 | 
1241  	 033F	 B8090031		i1 = i4			# LN: 246 | 
1242  	 0340	 808805B5		call (_shelvingLP)			# LN: 246 | 
1243  	 0341	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 246 | 
1244  	 0342	 B0140000		i0 = xmem[i0]			# LN: 246 | 
1245  	 0343	 00007FFF		nop #empty cycle
1246  	 0344	 98D40000		ymem[i0] = a0h			# LN: 246 | 
1247  	 0345				cline_246_0:			/* LN: 247 | CYCLE: 0 | RULES: () */ 
1248  	 0345	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 247 | 
1249  	 0346	 00007FFF		nop #empty cycle
1250  	 0347	 02087FFF		i0 += 1			# LN: 247 | 
1251  	 0348	 B0440000		xmem[_sb_ptr4 + 0] = i0			# LN: 247 | 
1252  	 0349	 80080576		jmp (endif_6)			# LN: 247 | 
1253  	 034A				cline_247_0:			/* LN: 250 | CYCLE: 0 | RULES: () */ 
1254  	 034A				else_6:			/* LN: 227 | CYCLE: 0 | RULES: () */ 
1255  	 034A	 88040000		a0 = xmem[_nChannels + 0]			# LN: 250 | 
1256  	 034B	 894A0006		uhalfword(a1) = (0x6)			# LN: 250 | 
1257  	 034C	 00004F08		a0 - a1			# LN: 250 | 
1258  	 034D	 844803EB		if (a != 0) jmp (else_7)			# LN: 250 | 
1259  	 034E				cline_250_0:			/* LN: 253 | CYCLE: 0 | RULES: () */ 
1260  	 034E	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 253 | 
1261  	 034F	 A1050000		i1 = (0) + (_z_xH)			# LN: 253 | 
1262  	 0350	 88940000		a0 = ymem[i0]			# LN: 253 | 
1263  	 0351	 A4050000		i4 = (0) + (_z_yH)			# LN: 253 | 
1264  	 0352	 B1090030		i0 = i1			# LN: 253 | 
1265  	 0353	 B8090031		i1 = i4			# LN: 253 | 
1266  	 0354	 80880581		call (_shelvingHP)			# LN: 253 | 
1267  	 0355	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 253 | 
1268  	 0356	 B0140000		i0 = xmem[i0]			# LN: 253 | 
1269  	 0357	 00007FFF		nop #empty cycle
1270  	 0358	 98D40000		ymem[i0] = a0h			# LN: 253 | 
1271  	 0359				cline_253_0:			/* LN: 254 | CYCLE: 0 | RULES: () */ 
1272  	 0359	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 254 | 
1273  	 035A	 A1050000		i1 = (0) + (_z_xL)			# LN: 254 | 
1274  	 035B	 88940000		a0 = ymem[i0]			# LN: 254 | 
1275  	 035C	 A4050000		i4 = (0) + (_z_yL)			# LN: 254 | 
1276  	 035D	 B1090030		i0 = i1			# LN: 254 | 
1277  	 035E	 B8090031		i1 = i4			# LN: 254 | 
1278  	 035F	 808805B5		call (_shelvingLP)			# LN: 254 | 
1279  	 0360	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 254 | 
1280  	 0361	 B0140000		i0 = xmem[i0]			# LN: 254 | 
1281  	 0362	 00007FFF		nop #empty cycle
1282  	 0363	 98D40000		ymem[i0] = a0h			# LN: 254 | 
1283  	 0364				cline_254_0:			/* LN: 255 | CYCLE: 0 | RULES: () */ 
1284  	 0364	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 255 | 
1285  	 0365	 00007FFF		nop #empty cycle
1286  	 0366	 02087FFF		i0 += 1			# LN: 255 | 
1287  	 0367	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 255 | 
1288  	 0368				cline_255_0:			/* LN: 257 | CYCLE: 0 | RULES: () */ 
1289  	 0368	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 257 | 
1290  	 0369	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 257 | 
1291  	 036A	 88940000		a0 = ymem[i0]			# LN: 257 | 
1292  	 036B	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 257 | 
1293  	 036C	 B1090030		i0 = i1			# LN: 257 | 
1294  	 036D	 B8090031		i1 = i4			# LN: 257 | 
1295  	 036E	 80880581		call (_shelvingHP)			# LN: 257 | 
1296  	 036F	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 257 | 
1297  	 0370	 B0140000		i0 = xmem[i0]			# LN: 257 | 
1298  	 0371	 00007FFF		nop #empty cycle
1299  	 0372	 98D40000		ymem[i0] = a0h			# LN: 257 | 
1300  	 0373				cline_257_0:			/* LN: 258 | CYCLE: 0 | RULES: () */ 
1301  	 0373	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 258 | 
1302  	 0374	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 258 | 
1303  	 0375	 88940000		a0 = ymem[i0]			# LN: 258 | 
1304  	 0376	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 258 | 
1305  	 0377	 B1090030		i0 = i1			# LN: 258 | 
1306  	 0378	 B8090031		i1 = i4			# LN: 258 | 
1307  	 0379	 808805B5		call (_shelvingLP)			# LN: 258 | 
1308  	 037A	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 258 | 
1309  	 037B	 B0140000		i0 = xmem[i0]			# LN: 258 | 
1310  	 037C	 00007FFF		nop #empty cycle
1311  	 037D	 98D40000		ymem[i0] = a0h			# LN: 258 | 
1312  	 037E				cline_258_0:			/* LN: 259 | CYCLE: 0 | RULES: () */ 
1313  	 037E	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 259 | 
1314  	 037F	 00007FFF		nop #empty cycle
1315  	 0380	 02087FFF		i0 += 1			# LN: 259 | 
1316  	 0381	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 259 | 
1317  	 0382				cline_259_0:			/* LN: 261 | CYCLE: 0 | RULES: () */ 
1318  	 0382	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 261 | 
1319  	 0383	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 261 | 
1320  	 0384	 88940000		a0 = ymem[i0]			# LN: 261 | 
1321  	 0385	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 261 | 
1322  	 0386	 B1090030		i0 = i1			# LN: 261 | 
1323  	 0387	 B8090031		i1 = i4			# LN: 261 | 
1324  	 0388	 80880581		call (_shelvingHP)			# LN: 261 | 
1325  	 0389	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 261 | 
1326  	 038A	 B0140000		i0 = xmem[i0]			# LN: 261 | 
1327  	 038B	 00007FFF		nop #empty cycle
1328  	 038C	 98D40000		ymem[i0] = a0h			# LN: 261 | 
1329  	 038D				cline_261_0:			/* LN: 262 | CYCLE: 0 | RULES: () */ 
1330  	 038D	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 262 | 
1331  	 038E	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 262 | 
1332  	 038F	 88940000		a0 = ymem[i0]			# LN: 262 | 
1333  	 0390	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 262 | 
1334  	 0391	 B1090030		i0 = i1			# LN: 262 | 
1335  	 0392	 B8090031		i1 = i4			# LN: 262 | 
1336  	 0393	 808805B5		call (_shelvingLP)			# LN: 262 | 
1337  	 0394	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 262 | 
1338  	 0395	 B0140000		i0 = xmem[i0]			# LN: 262 | 
1339  	 0396	 00007FFF		nop #empty cycle
1340  	 0397	 98D40000		ymem[i0] = a0h			# LN: 262 | 
1341  	 0398				cline_262_0:			/* LN: 263 | CYCLE: 0 | RULES: () */ 
1342  	 0398	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 263 | 
1343  	 0399	 00007FFF		nop #empty cycle
1344  	 039A	 02087FFF		i0 += 1			# LN: 263 | 
1345  	 039B	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 263 | 
1346  	 039C				cline_263_0:			/* LN: 265 | CYCLE: 0 | RULES: () */ 
1347  	 039C	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 265 | 
1348  	 039D	 A1050006		i1 = (0) + (_z_xH + 6)			# LN: 265 | 
1349  	 039E	 88940000		a0 = ymem[i0]			# LN: 265 | 
1350  	 039F	 A4050006		i4 = (0) + (_z_yH + 6)			# LN: 265 | 
1351  	 03A0	 B1090030		i0 = i1			# LN: 265 | 
1352  	 03A1	 B8090031		i1 = i4			# LN: 265 | 
1353  	 03A2	 80880581		call (_shelvingHP)			# LN: 265 | 
1354  	 03A3	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 265 | 
1355  	 03A4	 B0140000		i0 = xmem[i0]			# LN: 265 | 
1356  	 03A5	 00007FFF		nop #empty cycle
1357  	 03A6	 98D40000		ymem[i0] = a0h			# LN: 265 | 
1358  	 03A7				cline_265_0:			/* LN: 266 | CYCLE: 0 | RULES: () */ 
1359  	 03A7	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 266 | 
1360  	 03A8	 A1050006		i1 = (0) + (_z_xL + 6)			# LN: 266 | 
1361  	 03A9	 88940000		a0 = ymem[i0]			# LN: 266 | 
1362  	 03AA	 A4050006		i4 = (0) + (_z_yL + 6)			# LN: 266 | 
1363  	 03AB	 B1090030		i0 = i1			# LN: 266 | 
1364  	 03AC	 B8090031		i1 = i4			# LN: 266 | 
1365  	 03AD	 808805B5		call (_shelvingLP)			# LN: 266 | 
1366  	 03AE	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 266 | 
1367  	 03AF	 B0140000		i0 = xmem[i0]			# LN: 266 | 
1368  	 03B0	 00007FFF		nop #empty cycle
1369  	 03B1	 98D40000		ymem[i0] = a0h			# LN: 266 | 
1370  	 03B2				cline_266_0:			/* LN: 267 | CYCLE: 0 | RULES: () */ 
1371  	 03B2	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 267 | 
1372  	 03B3	 00007FFF		nop #empty cycle
1373  	 03B4	 02087FFF		i0 += 1			# LN: 267 | 
1374  	 03B5	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 267 | 
1375  	 03B6				cline_267_0:			/* LN: 269 | CYCLE: 0 | RULES: () */ 
1376  	 03B6	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 269 | 
1377  	 03B7	 A1050008		i1 = (0) + (_z_xH + 8)			# LN: 269 | 
1378  	 03B8	 88940000		a0 = ymem[i0]			# LN: 269 | 
1379  	 03B9	 A4050008		i4 = (0) + (_z_yH + 8)			# LN: 269 | 
1380  	 03BA	 B1090030		i0 = i1			# LN: 269 | 
1381  	 03BB	 B8090031		i1 = i4			# LN: 269 | 
1382  	 03BC	 80880581		call (_shelvingHP)			# LN: 269 | 
1383  	 03BD	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 269 | 
1384  	 03BE	 B0140000		i0 = xmem[i0]			# LN: 269 | 
1385  	 03BF	 00007FFF		nop #empty cycle
1386  	 03C0	 98D40000		ymem[i0] = a0h			# LN: 269 | 
1387  	 03C1				cline_269_0:			/* LN: 270 | CYCLE: 0 | RULES: () */ 
1388  	 03C1	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 270 | 
1389  	 03C2	 A1050008		i1 = (0) + (_z_xL + 8)			# LN: 270 | 
1390  	 03C3	 88940000		a0 = ymem[i0]			# LN: 270 | 
1391  	 03C4	 A4050008		i4 = (0) + (_z_yL + 8)			# LN: 270 | 
1392  	 03C5	 B1090030		i0 = i1			# LN: 270 | 
1393  	 03C6	 B8090031		i1 = i4			# LN: 270 | 
1394  	 03C7	 808805B5		call (_shelvingLP)			# LN: 270 | 
1395  	 03C8	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 270 | 
1396  	 03C9	 B0140000		i0 = xmem[i0]			# LN: 270 | 
1397  	 03CA	 00007FFF		nop #empty cycle
1398  	 03CB	 98D40000		ymem[i0] = a0h			# LN: 270 | 
1399  	 03CC				cline_270_0:			/* LN: 271 | CYCLE: 0 | RULES: () */ 
1400  	 03CC	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 271 | 
1401  	 03CD	 00007FFF		nop #empty cycle
1402  	 03CE	 02087FFF		i0 += 1			# LN: 271 | 
1403  	 03CF	 B0440000		xmem[_sb_ptr4 + 0] = i0			# LN: 271 | 
1404  	 03D0				cline_271_0:			/* LN: 273 | CYCLE: 0 | RULES: () */ 
1405  	 03D0	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 273 | 
1406  	 03D1	 A105000A		i1 = (0) + (_z_xH + 10)			# LN: 273 | 
1407  	 03D2	 88940000		a0 = ymem[i0]			# LN: 273 | 
1408  	 03D3	 A405000A		i4 = (0) + (_z_yH + 10)			# LN: 273 | 
1409  	 03D4	 B1090030		i0 = i1			# LN: 273 | 
1410  	 03D5	 B8090031		i1 = i4			# LN: 273 | 
1411  	 03D6	 80880581		call (_shelvingHP)			# LN: 273 | 
1412  	 03D7	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 273 | 
1413  	 03D8	 B0140000		i0 = xmem[i0]			# LN: 273 | 
1414  	 03D9	 00007FFF		nop #empty cycle
1415  	 03DA	 98D40000		ymem[i0] = a0h			# LN: 273 | 
1416  	 03DB				cline_273_0:			/* LN: 274 | CYCLE: 0 | RULES: () */ 
1417  	 03DB	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 274 | 
1418  	 03DC	 A105000A		i1 = (0) + (_z_xL + 10)			# LN: 274 | 
1419  	 03DD	 88940000		a0 = ymem[i0]			# LN: 274 | 
1420  	 03DE	 A405000A		i4 = (0) + (_z_yL + 10)			# LN: 274 | 
1421  	 03DF	 B1090030		i0 = i1			# LN: 274 | 
1422  	 03E0	 B8090031		i1 = i4			# LN: 274 | 
1423  	 03E1	 808805B5		call (_shelvingLP)			# LN: 274 | 
1424  	 03E2	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 274 | 
1425  	 03E3	 B0140000		i0 = xmem[i0]			# LN: 274 | 
1426  	 03E4	 00007FFF		nop #empty cycle
1427  	 03E5	 98D40000		ymem[i0] = a0h			# LN: 274 | 
1428  	 03E6				cline_274_0:			/* LN: 275 | CYCLE: 0 | RULES: () */ 
1429  	 03E6	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 275 | 
1430  	 03E7	 00007FFF		nop #empty cycle
1431  	 03E8	 02087FFF		i0 += 1			# LN: 275 | 
1432  	 03E9	 B0440000		xmem[_sb_ptr5 + 0] = i0			# LN: 275 | 
1433  	 03EA	 80080576		jmp (endif_7)			# LN: 275 | 
1434  	 03EB				cline_275_0:			/* LN: 277 | CYCLE: 0 | RULES: () */ 
1435  	 03EB				else_7:			/* LN: 250 | CYCLE: 0 | RULES: () */ 
1436  	 03EB	 88040000		a0 = xmem[_nChannels + 0]			# LN: 277 | 
1437  	 03EC	 894A0007		uhalfword(a1) = (0x7)			# LN: 277 | 
1438  	 03ED	 00004F08		a0 - a1			# LN: 277 | 
1439  	 03EE	 844804A6		if (a != 0) jmp (else_8)			# LN: 277 | 
1440  	 03EF				cline_277_0:			/* LN: 280 | CYCLE: 0 | RULES: () */ 
1441  	 03EF	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 280 | 
1442  	 03F0	 A1050000		i1 = (0) + (_z_xH)			# LN: 280 | 
1443  	 03F1	 88940000		a0 = ymem[i0]			# LN: 280 | 
1444  	 03F2	 A4050000		i4 = (0) + (_z_yH)			# LN: 280 | 
1445  	 03F3	 B1090030		i0 = i1			# LN: 280 | 
1446  	 03F4	 B8090031		i1 = i4			# LN: 280 | 
1447  	 03F5	 80880581		call (_shelvingHP)			# LN: 280 | 
1448  	 03F6	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 280 | 
1449  	 03F7	 B0140000		i0 = xmem[i0]			# LN: 280 | 
1450  	 03F8	 00007FFF		nop #empty cycle
1451  	 03F9	 98D40000		ymem[i0] = a0h			# LN: 280 | 
1452  	 03FA				cline_280_0:			/* LN: 281 | CYCLE: 0 | RULES: () */ 
1453  	 03FA	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 281 | 
1454  	 03FB	 A1050000		i1 = (0) + (_z_xL)			# LN: 281 | 
1455  	 03FC	 88940000		a0 = ymem[i0]			# LN: 281 | 
1456  	 03FD	 A4050000		i4 = (0) + (_z_yL)			# LN: 281 | 
1457  	 03FE	 B1090030		i0 = i1			# LN: 281 | 
1458  	 03FF	 B8090031		i1 = i4			# LN: 281 | 
1459  	 0400	 808805B5		call (_shelvingLP)			# LN: 281 | 
1460  	 0401	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 281 | 
1461  	 0402	 B0140000		i0 = xmem[i0]			# LN: 281 | 
1462  	 0403	 00007FFF		nop #empty cycle
1463  	 0404	 98D40000		ymem[i0] = a0h			# LN: 281 | 
1464  	 0405				cline_281_0:			/* LN: 282 | CYCLE: 0 | RULES: () */ 
1465  	 0405	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 282 | 
1466  	 0406	 00007FFF		nop #empty cycle
1467  	 0407	 02087FFF		i0 += 1			# LN: 282 | 
1468  	 0408	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 282 | 
1469  	 0409				cline_282_0:			/* LN: 284 | CYCLE: 0 | RULES: () */ 
1470  	 0409	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 284 | 
1471  	 040A	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 284 | 
1472  	 040B	 88940000		a0 = ymem[i0]			# LN: 284 | 
1473  	 040C	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 284 | 
1474  	 040D	 B1090030		i0 = i1			# LN: 284 | 
1475  	 040E	 B8090031		i1 = i4			# LN: 284 | 
1476  	 040F	 80880581		call (_shelvingHP)			# LN: 284 | 
1477  	 0410	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 284 | 
1478  	 0411	 B0140000		i0 = xmem[i0]			# LN: 284 | 
1479  	 0412	 00007FFF		nop #empty cycle
1480  	 0413	 98D40000		ymem[i0] = a0h			# LN: 284 | 
1481  	 0414				cline_284_0:			/* LN: 285 | CYCLE: 0 | RULES: () */ 
1482  	 0414	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 285 | 
1483  	 0415	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 285 | 
1484  	 0416	 88940000		a0 = ymem[i0]			# LN: 285 | 
1485  	 0417	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 285 | 
1486  	 0418	 B1090030		i0 = i1			# LN: 285 | 
1487  	 0419	 B8090031		i1 = i4			# LN: 285 | 
1488  	 041A	 808805B5		call (_shelvingLP)			# LN: 285 | 
1489  	 041B	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 285 | 
1490  	 041C	 B0140000		i0 = xmem[i0]			# LN: 285 | 
1491  	 041D	 00007FFF		nop #empty cycle
1492  	 041E	 98D40000		ymem[i0] = a0h			# LN: 285 | 
1493  	 041F				cline_285_0:			/* LN: 286 | CYCLE: 0 | RULES: () */ 
1494  	 041F	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 286 | 
1495  	 0420	 00007FFF		nop #empty cycle
1496  	 0421	 02087FFF		i0 += 1			# LN: 286 | 
1497  	 0422	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 286 | 
1498  	 0423				cline_286_0:			/* LN: 288 | CYCLE: 0 | RULES: () */ 
1499  	 0423	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 288 | 
1500  	 0424	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 288 | 
1501  	 0425	 88940000		a0 = ymem[i0]			# LN: 288 | 
1502  	 0426	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 288 | 
1503  	 0427	 B1090030		i0 = i1			# LN: 288 | 
1504  	 0428	 B8090031		i1 = i4			# LN: 288 | 
1505  	 0429	 80880581		call (_shelvingHP)			# LN: 288 | 
1506  	 042A	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 288 | 
1507  	 042B	 B0140000		i0 = xmem[i0]			# LN: 288 | 
1508  	 042C	 00007FFF		nop #empty cycle
1509  	 042D	 98D40000		ymem[i0] = a0h			# LN: 288 | 
1510  	 042E				cline_288_0:			/* LN: 289 | CYCLE: 0 | RULES: () */ 
1511  	 042E	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 289 | 
1512  	 042F	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 289 | 
1513  	 0430	 88940000		a0 = ymem[i0]			# LN: 289 | 
1514  	 0431	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 289 | 
1515  	 0432	 B1090030		i0 = i1			# LN: 289 | 
1516  	 0433	 B8090031		i1 = i4			# LN: 289 | 
1517  	 0434	 808805B5		call (_shelvingLP)			# LN: 289 | 
1518  	 0435	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 289 | 
1519  	 0436	 B0140000		i0 = xmem[i0]			# LN: 289 | 
1520  	 0437	 00007FFF		nop #empty cycle
1521  	 0438	 98D40000		ymem[i0] = a0h			# LN: 289 | 
1522  	 0439				cline_289_0:			/* LN: 290 | CYCLE: 0 | RULES: () */ 
1523  	 0439	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 290 | 
1524  	 043A	 00007FFF		nop #empty cycle
1525  	 043B	 02087FFF		i0 += 1			# LN: 290 | 
1526  	 043C	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 290 | 
1527  	 043D				cline_290_0:			/* LN: 292 | CYCLE: 0 | RULES: () */ 
1528  	 043D	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 292 | 
1529  	 043E	 A1050006		i1 = (0) + (_z_xH + 6)			# LN: 292 | 
1530  	 043F	 88940000		a0 = ymem[i0]			# LN: 292 | 
1531  	 0440	 A4050006		i4 = (0) + (_z_yH + 6)			# LN: 292 | 
1532  	 0441	 B1090030		i0 = i1			# LN: 292 | 
1533  	 0442	 B8090031		i1 = i4			# LN: 292 | 
1534  	 0443	 80880581		call (_shelvingHP)			# LN: 292 | 
1535  	 0444	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 292 | 
1536  	 0445	 B0140000		i0 = xmem[i0]			# LN: 292 | 
1537  	 0446	 00007FFF		nop #empty cycle
1538  	 0447	 98D40000		ymem[i0] = a0h			# LN: 292 | 
1539  	 0448				cline_292_0:			/* LN: 293 | CYCLE: 0 | RULES: () */ 
1540  	 0448	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 293 | 
1541  	 0449	 A1050006		i1 = (0) + (_z_xL + 6)			# LN: 293 | 
1542  	 044A	 88940000		a0 = ymem[i0]			# LN: 293 | 
1543  	 044B	 A4050006		i4 = (0) + (_z_yL + 6)			# LN: 293 | 
1544  	 044C	 B1090030		i0 = i1			# LN: 293 | 
1545  	 044D	 B8090031		i1 = i4			# LN: 293 | 
1546  	 044E	 808805B5		call (_shelvingLP)			# LN: 293 | 
1547  	 044F	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 293 | 
1548  	 0450	 B0140000		i0 = xmem[i0]			# LN: 293 | 
1549  	 0451	 00007FFF		nop #empty cycle
1550  	 0452	 98D40000		ymem[i0] = a0h			# LN: 293 | 
1551  	 0453				cline_293_0:			/* LN: 294 | CYCLE: 0 | RULES: () */ 
1552  	 0453	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 294 | 
1553  	 0454	 00007FFF		nop #empty cycle
1554  	 0455	 02087FFF		i0 += 1			# LN: 294 | 
1555  	 0456	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 294 | 
1556  	 0457				cline_294_0:			/* LN: 296 | CYCLE: 0 | RULES: () */ 
1557  	 0457	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 296 | 
1558  	 0458	 A1050008		i1 = (0) + (_z_xH + 8)			# LN: 296 | 
1559  	 0459	 88940000		a0 = ymem[i0]			# LN: 296 | 
1560  	 045A	 A4050008		i4 = (0) + (_z_yH + 8)			# LN: 296 | 
1561  	 045B	 B1090030		i0 = i1			# LN: 296 | 
1562  	 045C	 B8090031		i1 = i4			# LN: 296 | 
1563  	 045D	 80880581		call (_shelvingHP)			# LN: 296 | 
1564  	 045E	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 296 | 
1565  	 045F	 B0140000		i0 = xmem[i0]			# LN: 296 | 
1566  	 0460	 00007FFF		nop #empty cycle
1567  	 0461	 98D40000		ymem[i0] = a0h			# LN: 296 | 
1568  	 0462				cline_296_0:			/* LN: 297 | CYCLE: 0 | RULES: () */ 
1569  	 0462	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 297 | 
1570  	 0463	 A1050008		i1 = (0) + (_z_xL + 8)			# LN: 297 | 
1571  	 0464	 88940000		a0 = ymem[i0]			# LN: 297 | 
1572  	 0465	 A4050008		i4 = (0) + (_z_yL + 8)			# LN: 297 | 
1573  	 0466	 B1090030		i0 = i1			# LN: 297 | 
1574  	 0467	 B8090031		i1 = i4			# LN: 297 | 
1575  	 0468	 808805B5		call (_shelvingLP)			# LN: 297 | 
1576  	 0469	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 297 | 
1577  	 046A	 B0140000		i0 = xmem[i0]			# LN: 297 | 
1578  	 046B	 00007FFF		nop #empty cycle
1579  	 046C	 98D40000		ymem[i0] = a0h			# LN: 297 | 
1580  	 046D				cline_297_0:			/* LN: 298 | CYCLE: 0 | RULES: () */ 
1581  	 046D	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 298 | 
1582  	 046E	 00007FFF		nop #empty cycle
1583  	 046F	 02087FFF		i0 += 1			# LN: 298 | 
1584  	 0470	 B0440000		xmem[_sb_ptr4 + 0] = i0			# LN: 298 | 
1585  	 0471				cline_298_0:			/* LN: 300 | CYCLE: 0 | RULES: () */ 
1586  	 0471	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 300 | 
1587  	 0472	 A105000A		i1 = (0) + (_z_xH + 10)			# LN: 300 | 
1588  	 0473	 88940000		a0 = ymem[i0]			# LN: 300 | 
1589  	 0474	 A405000A		i4 = (0) + (_z_yH + 10)			# LN: 300 | 
1590  	 0475	 B1090030		i0 = i1			# LN: 300 | 
1591  	 0476	 B8090031		i1 = i4			# LN: 300 | 
1592  	 0477	 80880581		call (_shelvingHP)			# LN: 300 | 
1593  	 0478	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 300 | 
1594  	 0479	 B0140000		i0 = xmem[i0]			# LN: 300 | 
1595  	 047A	 00007FFF		nop #empty cycle
1596  	 047B	 98D40000		ymem[i0] = a0h			# LN: 300 | 
1597  	 047C				cline_300_0:			/* LN: 301 | CYCLE: 0 | RULES: () */ 
1598  	 047C	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 301 | 
1599  	 047D	 A105000A		i1 = (0) + (_z_xL + 10)			# LN: 301 | 
1600  	 047E	 88940000		a0 = ymem[i0]			# LN: 301 | 
1601  	 047F	 A405000A		i4 = (0) + (_z_yL + 10)			# LN: 301 | 
1602  	 0480	 B1090030		i0 = i1			# LN: 301 | 
1603  	 0481	 B8090031		i1 = i4			# LN: 301 | 
1604  	 0482	 808805B5		call (_shelvingLP)			# LN: 301 | 
1605  	 0483	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 301 | 
1606  	 0484	 B0140000		i0 = xmem[i0]			# LN: 301 | 
1607  	 0485	 00007FFF		nop #empty cycle
1608  	 0486	 98D40000		ymem[i0] = a0h			# LN: 301 | 
1609  	 0487				cline_301_0:			/* LN: 302 | CYCLE: 0 | RULES: () */ 
1610  	 0487	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 302 | 
1611  	 0488	 00007FFF		nop #empty cycle
1612  	 0489	 02087FFF		i0 += 1			# LN: 302 | 
1613  	 048A	 B0440000		xmem[_sb_ptr5 + 0] = i0			# LN: 302 | 
1614  	 048B				cline_302_0:			/* LN: 304 | CYCLE: 0 | RULES: () */ 
1615  	 048B	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 304 | 
1616  	 048C	 A105000C		i1 = (0) + (_z_xH + 12)			# LN: 304 | 
1617  	 048D	 88940000		a0 = ymem[i0]			# LN: 304 | 
1618  	 048E	 A405000C		i4 = (0) + (_z_yH + 12)			# LN: 304 | 
1619  	 048F	 B1090030		i0 = i1			# LN: 304 | 
1620  	 0490	 B8090031		i1 = i4			# LN: 304 | 
1621  	 0491	 80880581		call (_shelvingHP)			# LN: 304 | 
1622  	 0492	 A0050000		i0 = (0) + (_sb_ptr6)			# LN: 304 | 
1623  	 0493	 B0140000		i0 = xmem[i0]			# LN: 304 | 
1624  	 0494	 00007FFF		nop #empty cycle
1625  	 0495	 98D40000		ymem[i0] = a0h			# LN: 304 | 
1626  	 0496				cline_304_0:			/* LN: 305 | CYCLE: 0 | RULES: () */ 
1627  	 0496	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 305 | 
1628  	 0497	 B2040000		i2 = xmem[_sb_ptr6 + 0]			# LN: 305 | 
1629  	 0498	 88940000		a0 = ymem[i0]			# LN: 305 | 
1630  	 0499	 B1040000		i1 = xmem[_sb_ptr6 + 0]			# LN: 305 | 
1631  	 049A	 A405000C		i4 = (0) + (_z_yL + 12)			# LN: 305 | 
1632  	 049B	 02097FFF		i1 += 1			# LN: 305 | 
1633  	 049C	 B1440000		xmem[_sb_ptr6 + 0] = i1			# LN: 305 | 
1634  	 049D	 B8090031		i1 = i4			# LN: 305 | 
1635  	 049E	 A005000C		i0 = (0) + (_z_xL + 12)			# LN: 305 | 
1636  	 049F	 808805B5		call (_shelvingLP)			# LN: 305 | 
1637  	 04A0	 98D40002		ymem[i2] = a0h			# LN: 305 | 
1638  	 04A1				cline_305_0:			/* LN: 306 | CYCLE: 0 | RULES: () */ 
1639  	 04A1	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 306 | 
1640  	 04A2	 00007FFF		nop #empty cycle
1641  	 04A3	 02087FFF		i0 += 1			# LN: 306 | 
1642  	 04A4	 B0440000		xmem[_sb_ptr6 + 0] = i0			# LN: 306 | 
1643  	 04A5	 80080576		jmp (endif_8)			# LN: 306 | 
1644  	 04A6				cline_306_0:			/* LN: 313 | CYCLE: 0 | RULES: () */ 
1645  	 04A6				else_8:			/* LN: 277 | CYCLE: 0 | RULES: () */ 
1646  	 04A6	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 313 | 
1647  	 04A7	 A1050000		i1 = (0) + (_z_xH)			# LN: 313 | 
1648  	 04A8	 88940000		a0 = ymem[i0]			# LN: 313 | 
1649  	 04A9	 A4050000		i4 = (0) + (_z_yH)			# LN: 313 | 
1650  	 04AA	 B1090030		i0 = i1			# LN: 313 | 
1651  	 04AB	 B8090031		i1 = i4			# LN: 313 | 
1652  	 04AC	 80880581		call (_shelvingHP)			# LN: 313 | 
1653  	 04AD	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 313 | 
1654  	 04AE	 B0140000		i0 = xmem[i0]			# LN: 313 | 
1655  	 04AF	 00007FFF		nop #empty cycle
1656  	 04B0	 98D40000		ymem[i0] = a0h			# LN: 313 | 
1657  	 04B1				cline_313_0:			/* LN: 314 | CYCLE: 0 | RULES: () */ 
1658  	 04B1	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 314 | 
1659  	 04B2	 A1050000		i1 = (0) + (_z_xL)			# LN: 314 | 
1660  	 04B3	 88940000		a0 = ymem[i0]			# LN: 314 | 
1661  	 04B4	 A4050000		i4 = (0) + (_z_yL)			# LN: 314 | 
1662  	 04B5	 B1090030		i0 = i1			# LN: 314 | 
1663  	 04B6	 B8090031		i1 = i4			# LN: 314 | 
1664  	 04B7	 808805B5		call (_shelvingLP)			# LN: 314 | 
1665  	 04B8	 A0050000		i0 = (0) + (_sb_ptr0)			# LN: 314 | 
1666  	 04B9	 B0140000		i0 = xmem[i0]			# LN: 314 | 
1667  	 04BA	 00007FFF		nop #empty cycle
1668  	 04BB	 98D40000		ymem[i0] = a0h			# LN: 314 | 
1669  	 04BC				cline_314_0:			/* LN: 315 | CYCLE: 0 | RULES: () */ 
1670  	 04BC	 B0040000		i0 = xmem[_sb_ptr0 + 0]			# LN: 315 | 
1671  	 04BD	 00007FFF		nop #empty cycle
1672  	 04BE	 02087FFF		i0 += 1			# LN: 315 | 
1673  	 04BF	 B0440000		xmem[_sb_ptr0 + 0] = i0			# LN: 315 | 
1674  	 04C0				cline_315_0:			/* LN: 317 | CYCLE: 0 | RULES: () */ 
1675  	 04C0	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 317 | 
1676  	 04C1	 A1050002		i1 = (0) + (_z_xH + 2)			# LN: 317 | 
1677  	 04C2	 88940000		a0 = ymem[i0]			# LN: 317 | 
1678  	 04C3	 A4050002		i4 = (0) + (_z_yH + 2)			# LN: 317 | 
1679  	 04C4	 B1090030		i0 = i1			# LN: 317 | 
1680  	 04C5	 B8090031		i1 = i4			# LN: 317 | 
1681  	 04C6	 80880581		call (_shelvingHP)			# LN: 317 | 
1682  	 04C7	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 317 | 
1683  	 04C8	 B0140000		i0 = xmem[i0]			# LN: 317 | 
1684  	 04C9	 00007FFF		nop #empty cycle
1685  	 04CA	 98D40000		ymem[i0] = a0h			# LN: 317 | 
1686  	 04CB				cline_317_0:			/* LN: 318 | CYCLE: 0 | RULES: () */ 
1687  	 04CB	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 318 | 
1688  	 04CC	 A1050002		i1 = (0) + (_z_xL + 2)			# LN: 318 | 
1689  	 04CD	 88940000		a0 = ymem[i0]			# LN: 318 | 
1690  	 04CE	 A4050002		i4 = (0) + (_z_yL + 2)			# LN: 318 | 
1691  	 04CF	 B1090030		i0 = i1			# LN: 318 | 
1692  	 04D0	 B8090031		i1 = i4			# LN: 318 | 
1693  	 04D1	 808805B5		call (_shelvingLP)			# LN: 318 | 
1694  	 04D2	 A0050000		i0 = (0) + (_sb_ptr1)			# LN: 318 | 
1695  	 04D3	 B0140000		i0 = xmem[i0]			# LN: 318 | 
1696  	 04D4	 00007FFF		nop #empty cycle
1697  	 04D5	 98D40000		ymem[i0] = a0h			# LN: 318 | 
1698  	 04D6				cline_318_0:			/* LN: 319 | CYCLE: 0 | RULES: () */ 
1699  	 04D6	 B0040000		i0 = xmem[_sb_ptr1 + 0]			# LN: 319 | 
1700  	 04D7	 00007FFF		nop #empty cycle
1701  	 04D8	 02087FFF		i0 += 1			# LN: 319 | 
1702  	 04D9	 B0440000		xmem[_sb_ptr1 + 0] = i0			# LN: 319 | 
1703  	 04DA				cline_319_0:			/* LN: 321 | CYCLE: 0 | RULES: () */ 
1704  	 04DA	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 321 | 
1705  	 04DB	 A1050004		i1 = (0) + (_z_xH + 4)			# LN: 321 | 
1706  	 04DC	 88940000		a0 = ymem[i0]			# LN: 321 | 
1707  	 04DD	 A4050004		i4 = (0) + (_z_yH + 4)			# LN: 321 | 
1708  	 04DE	 B1090030		i0 = i1			# LN: 321 | 
1709  	 04DF	 B8090031		i1 = i4			# LN: 321 | 
1710  	 04E0	 80880581		call (_shelvingHP)			# LN: 321 | 
1711  	 04E1	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 321 | 
1712  	 04E2	 B0140000		i0 = xmem[i0]			# LN: 321 | 
1713  	 04E3	 00007FFF		nop #empty cycle
1714  	 04E4	 98D40000		ymem[i0] = a0h			# LN: 321 | 
1715  	 04E5				cline_321_0:			/* LN: 322 | CYCLE: 0 | RULES: () */ 
1716  	 04E5	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 322 | 
1717  	 04E6	 A1050004		i1 = (0) + (_z_xL + 4)			# LN: 322 | 
1718  	 04E7	 88940000		a0 = ymem[i0]			# LN: 322 | 
1719  	 04E8	 A4050004		i4 = (0) + (_z_yL + 4)			# LN: 322 | 
1720  	 04E9	 B1090030		i0 = i1			# LN: 322 | 
1721  	 04EA	 B8090031		i1 = i4			# LN: 322 | 
1722  	 04EB	 808805B5		call (_shelvingLP)			# LN: 322 | 
1723  	 04EC	 A0050000		i0 = (0) + (_sb_ptr2)			# LN: 322 | 
1724  	 04ED	 B0140000		i0 = xmem[i0]			# LN: 322 | 
1725  	 04EE	 00007FFF		nop #empty cycle
1726  	 04EF	 98D40000		ymem[i0] = a0h			# LN: 322 | 
1727  	 04F0				cline_322_0:			/* LN: 323 | CYCLE: 0 | RULES: () */ 
1728  	 04F0	 B0040000		i0 = xmem[_sb_ptr2 + 0]			# LN: 323 | 
1729  	 04F1	 00007FFF		nop #empty cycle
1730  	 04F2	 02087FFF		i0 += 1			# LN: 323 | 
1731  	 04F3	 B0440000		xmem[_sb_ptr2 + 0] = i0			# LN: 323 | 
1732  	 04F4				cline_323_0:			/* LN: 325 | CYCLE: 0 | RULES: () */ 
1733  	 04F4	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 325 | 
1734  	 04F5	 A1050006		i1 = (0) + (_z_xH + 6)			# LN: 325 | 
1735  	 04F6	 88940000		a0 = ymem[i0]			# LN: 325 | 
1736  	 04F7	 A4050006		i4 = (0) + (_z_yH + 6)			# LN: 325 | 
1737  	 04F8	 B1090030		i0 = i1			# LN: 325 | 
1738  	 04F9	 B8090031		i1 = i4			# LN: 325 | 
1739  	 04FA	 80880581		call (_shelvingHP)			# LN: 325 | 
1740  	 04FB	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 325 | 
1741  	 04FC	 B0140000		i0 = xmem[i0]			# LN: 325 | 
1742  	 04FD	 00007FFF		nop #empty cycle
1743  	 04FE	 98D40000		ymem[i0] = a0h			# LN: 325 | 
1744  	 04FF				cline_325_0:			/* LN: 326 | CYCLE: 0 | RULES: () */ 
1745  	 04FF	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 326 | 
1746  	 0500	 A1050006		i1 = (0) + (_z_xL + 6)			# LN: 326 | 
1747  	 0501	 88940000		a0 = ymem[i0]			# LN: 326 | 
1748  	 0502	 A4050006		i4 = (0) + (_z_yL + 6)			# LN: 326 | 
1749  	 0503	 B1090030		i0 = i1			# LN: 326 | 
1750  	 0504	 B8090031		i1 = i4			# LN: 326 | 
1751  	 0505	 808805B5		call (_shelvingLP)			# LN: 326 | 
1752  	 0506	 A0050000		i0 = (0) + (_sb_ptr3)			# LN: 326 | 
1753  	 0507	 B0140000		i0 = xmem[i0]			# LN: 326 | 
1754  	 0508	 00007FFF		nop #empty cycle
1755  	 0509	 98D40000		ymem[i0] = a0h			# LN: 326 | 
1756  	 050A				cline_326_0:			/* LN: 327 | CYCLE: 0 | RULES: () */ 
1757  	 050A	 B0040000		i0 = xmem[_sb_ptr3 + 0]			# LN: 327 | 
1758  	 050B	 00007FFF		nop #empty cycle
1759  	 050C	 02087FFF		i0 += 1			# LN: 327 | 
1760  	 050D	 B0440000		xmem[_sb_ptr3 + 0] = i0			# LN: 327 | 
1761  	 050E				cline_327_0:			/* LN: 329 | CYCLE: 0 | RULES: () */ 
1762  	 050E	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 329 | 
1763  	 050F	 A1050008		i1 = (0) + (_z_xH + 8)			# LN: 329 | 
1764  	 0510	 88940000		a0 = ymem[i0]			# LN: 329 | 
1765  	 0511	 A4050008		i4 = (0) + (_z_yH + 8)			# LN: 329 | 
1766  	 0512	 B1090030		i0 = i1			# LN: 329 | 
1767  	 0513	 B8090031		i1 = i4			# LN: 329 | 
1768  	 0514	 80880581		call (_shelvingHP)			# LN: 329 | 
1769  	 0515	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 329 | 
1770  	 0516	 B0140000		i0 = xmem[i0]			# LN: 329 | 
1771  	 0517	 00007FFF		nop #empty cycle
1772  	 0518	 98D40000		ymem[i0] = a0h			# LN: 329 | 
1773  	 0519				cline_329_0:			/* LN: 330 | CYCLE: 0 | RULES: () */ 
1774  	 0519	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 330 | 
1775  	 051A	 A1050008		i1 = (0) + (_z_xL + 8)			# LN: 330 | 
1776  	 051B	 88940000		a0 = ymem[i0]			# LN: 330 | 
1777  	 051C	 A4050008		i4 = (0) + (_z_yL + 8)			# LN: 330 | 
1778  	 051D	 B1090030		i0 = i1			# LN: 330 | 
1779  	 051E	 B8090031		i1 = i4			# LN: 330 | 
1780  	 051F	 808805B5		call (_shelvingLP)			# LN: 330 | 
1781  	 0520	 A0050000		i0 = (0) + (_sb_ptr4)			# LN: 330 | 
1782  	 0521	 B0140000		i0 = xmem[i0]			# LN: 330 | 
1783  	 0522	 00007FFF		nop #empty cycle
1784  	 0523	 98D40000		ymem[i0] = a0h			# LN: 330 | 
1785  	 0524				cline_330_0:			/* LN: 331 | CYCLE: 0 | RULES: () */ 
1786  	 0524	 B0040000		i0 = xmem[_sb_ptr4 + 0]			# LN: 331 | 
1787  	 0525	 00007FFF		nop #empty cycle
1788  	 0526	 02087FFF		i0 += 1			# LN: 331 | 
1789  	 0527	 B0440000		xmem[_sb_ptr4 + 0] = i0			# LN: 331 | 
1790  	 0528				cline_331_0:			/* LN: 333 | CYCLE: 0 | RULES: () */ 
1791  	 0528	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 333 | 
1792  	 0529	 A105000A		i1 = (0) + (_z_xH + 10)			# LN: 333 | 
1793  	 052A	 88940000		a0 = ymem[i0]			# LN: 333 | 
1794  	 052B	 A405000A		i4 = (0) + (_z_yH + 10)			# LN: 333 | 
1795  	 052C	 B1090030		i0 = i1			# LN: 333 | 
1796  	 052D	 B8090031		i1 = i4			# LN: 333 | 
1797  	 052E	 80880581		call (_shelvingHP)			# LN: 333 | 
1798  	 052F	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 333 | 
1799  	 0530	 B0140000		i0 = xmem[i0]			# LN: 333 | 
1800  	 0531	 00007FFF		nop #empty cycle
1801  	 0532	 98D40000		ymem[i0] = a0h			# LN: 333 | 
1802  	 0533				cline_333_0:			/* LN: 334 | CYCLE: 0 | RULES: () */ 
1803  	 0533	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 334 | 
1804  	 0534	 A105000A		i1 = (0) + (_z_xL + 10)			# LN: 334 | 
1805  	 0535	 88940000		a0 = ymem[i0]			# LN: 334 | 
1806  	 0536	 A405000A		i4 = (0) + (_z_yL + 10)			# LN: 334 | 
1807  	 0537	 B1090030		i0 = i1			# LN: 334 | 
1808  	 0538	 B8090031		i1 = i4			# LN: 334 | 
1809  	 0539	 808805B5		call (_shelvingLP)			# LN: 334 | 
1810  	 053A	 A0050000		i0 = (0) + (_sb_ptr5)			# LN: 334 | 
1811  	 053B	 B0140000		i0 = xmem[i0]			# LN: 334 | 
1812  	 053C	 00007FFF		nop #empty cycle
1813  	 053D	 98D40000		ymem[i0] = a0h			# LN: 334 | 
1814  	 053E				cline_334_0:			/* LN: 335 | CYCLE: 0 | RULES: () */ 
1815  	 053E	 B0040000		i0 = xmem[_sb_ptr5 + 0]			# LN: 335 | 
1816  	 053F	 00007FFF		nop #empty cycle
1817  	 0540	 02087FFF		i0 += 1			# LN: 335 | 
1818  	 0541	 B0440000		xmem[_sb_ptr5 + 0] = i0			# LN: 335 | 
1819  	 0542				cline_335_0:			/* LN: 337 | CYCLE: 0 | RULES: () */ 
1820  	 0542	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 337 | 
1821  	 0543	 A105000C		i1 = (0) + (_z_xH + 12)			# LN: 337 | 
1822  	 0544	 88940000		a0 = ymem[i0]			# LN: 337 | 
1823  	 0545	 A405000C		i4 = (0) + (_z_yH + 12)			# LN: 337 | 
1824  	 0546	 B1090030		i0 = i1			# LN: 337 | 
1825  	 0547	 B8090031		i1 = i4			# LN: 337 | 
1826  	 0548	 80880581		call (_shelvingHP)			# LN: 337 | 
1827  	 0549	 A0050000		i0 = (0) + (_sb_ptr6)			# LN: 337 | 
1828  	 054A	 B0140000		i0 = xmem[i0]			# LN: 337 | 
1829  	 054B	 00007FFF		nop #empty cycle
1830  	 054C	 98D40000		ymem[i0] = a0h			# LN: 337 | 
1831  	 054D				cline_337_0:			/* LN: 338 | CYCLE: 0 | RULES: () */ 
1832  	 054D	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 338 | 
1833  	 054E	 B2040000		i2 = xmem[_sb_ptr6 + 0]			# LN: 338 | 
1834  	 054F	 88940000		a0 = ymem[i0]			# LN: 338 | 
1835  	 0550	 B1040000		i1 = xmem[_sb_ptr6 + 0]			# LN: 338 | 
1836  	 0551	 A405000C		i4 = (0) + (_z_yL + 12)			# LN: 338 | 
1837  	 0552	 02097FFF		i1 += 1			# LN: 338 | 
1838  	 0553	 B1440000		xmem[_sb_ptr6 + 0] = i1			# LN: 338 | 
1839  	 0554	 B8090031		i1 = i4			# LN: 338 | 
1840  	 0555	 A005000C		i0 = (0) + (_z_xL + 12)			# LN: 338 | 
1841  	 0556	 808805B5		call (_shelvingLP)			# LN: 338 | 
1842  	 0557	 98D40002		ymem[i2] = a0h			# LN: 338 | 
1843  	 0558				cline_338_0:			/* LN: 339 | CYCLE: 0 | RULES: () */ 
1844  	 0558	 B0040000		i0 = xmem[_sb_ptr6 + 0]			# LN: 339 | 
1845  	 0559	 00007FFF		nop #empty cycle
1846  	 055A	 02087FFF		i0 += 1			# LN: 339 | 
1847  	 055B	 B0440000		xmem[_sb_ptr6 + 0] = i0			# LN: 339 | 
1848  	 055C				cline_339_0:			/* LN: 341 | CYCLE: 0 | RULES: () */ 
1849  	 055C	 B0040000		i0 = xmem[_sb_ptr7 + 0]			# LN: 341 | 
1850  	 055D	 A105000E		i1 = (0) + (_z_xH + 14)			# LN: 341 | 
1851  	 055E	 88940000		a0 = ymem[i0]			# LN: 341 | 
1852  	 055F	 A405000E		i4 = (0) + (_z_yH + 14)			# LN: 341 | 
1853  	 0560	 B1090030		i0 = i1			# LN: 341 | 
1854  	 0561	 B8090031		i1 = i4			# LN: 341 | 
1855  	 0562	 80880581		call (_shelvingHP)			# LN: 341 | 
1856  	 0563	 A0050000		i0 = (0) + (_sb_ptr7)			# LN: 341 | 
1857  	 0564	 B0140000		i0 = xmem[i0]			# LN: 341 | 
1858  	 0565	 00007FFF		nop #empty cycle
1859  	 0566	 98D40000		ymem[i0] = a0h			# LN: 341 | 
1860  	 0567				cline_341_0:			/* LN: 342 | CYCLE: 0 | RULES: () */ 
1861  	 0567	 B0040000		i0 = xmem[_sb_ptr7 + 0]			# LN: 342 | 
1862  	 0568	 A105000E		i1 = (0) + (_z_xL + 14)			# LN: 342 | 
1863  	 0569	 88940000		a0 = ymem[i0]			# LN: 342 | 
1864  	 056A	 A405000E		i4 = (0) + (_z_yL + 14)			# LN: 342 | 
1865  	 056B	 B1090030		i0 = i1			# LN: 342 | 
1866  	 056C	 B8090031		i1 = i4			# LN: 342 | 
1867  	 056D	 808805B5		call (_shelvingLP)			# LN: 342 | 
1868  	 056E	 A0050000		i0 = (0) + (_sb_ptr7)			# LN: 342 | 
1869  	 056F	 B0140000		i0 = xmem[i0]			# LN: 342 | 
1870  	 0570	 00007FFF		nop #empty cycle
1871  	 0571	 98D40000		ymem[i0] = a0h			# LN: 342 | 
1872  	 0572				cline_342_0:			/* LN: 343 | CYCLE: 0 | RULES: () */ 
1873  	 0572	 B0040000		i0 = xmem[_sb_ptr7 + 0]			# LN: 343 | 
1874  	 0573	 00007FFF		nop #empty cycle
1875  	 0574	 02087FFF		i0 += 1			# LN: 343 | 
1876  	 0575	 B0440000		xmem[_sb_ptr7 + 0] = i0			# LN: 343 | 
1877  	 0576				cline_343_0:			/* LN: 174 | CYCLE: 0 | RULES: () */ 
1878  	 0576				init_latch_label_0:			/* LN: 345 | CYCLE: 0 | RULES: () */ 
1879  	 0576				endif_2:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
1880  	 0576				endif_3:			/* LN: 182 | CYCLE: 0 | RULES: () */ 
1881  	 0576				endif_4:			/* LN: 193 | CYCLE: 0 | RULES: () */ 
1882  	 0576				endif_5:			/* LN: 207 | CYCLE: 0 | RULES: () */ 
1883  	 0576				endif_6:			/* LN: 227 | CYCLE: 0 | RULES: () */ 
1884  	 0576				endif_7:			/* LN: 250 | CYCLE: 0 | RULES: () */ 
1885  	 0576				endif_8:			/* LN: 277 | CYCLE: 0 | RULES: () */ 
1886  	 0576	 90750001		i0 = i7 - (0x1)			# LN: 174 | 
1887  	 0577	 88140000		a0 = xmem[i0]			# LN: 174 | 
1888  	 0578	 894A0001		uhalfword(a1) = (0x1)			# LN: 174 | 
1889  	 0579	 00004408		a0 = a0 + a1			# LN: 174 | 
1890  	 057A	 90750001		i0 = i7 - (0x1)			# LN: 174 | 
1891  	 057B				label_end_92:			# LN: 174 | CYCLE: 5 | RULES: ()
1892  	 057B	 98540000		xmem[i0] = a0h			# LN: 174 | 
1893  	 057C				cline_174_1:			/* LN: 348 | CYCLE: 0 | RULES: () */ 
1894  	 057C				for_end_0:			/* LN: 174 | CYCLE: 0 | RULES: () */ 
1895  	 057C	 8008057D		jmp (__epilogue_248)			# LN: 348 | 
1896  	 057D				__epilogue_248:			/* LN: 348 | CYCLE: 0 | RULES: () */ 
1897  	 057D	 97750001		i7 = i7 - (0x1)			# LN: 348 | 
1898  	 057E	 02177FFF		i7 -= 1			# LN: 348 | 
1899  	 057F	 B2140027		i2 = xmem[i7]; i7 -= 1			# LN: 348, 348 | 
1900  	 0580	 81880000		ret			# LN: 348 | 
1901  						
1902  						
1903  						
1904  	 0581				_shelvingHP:			/* LN: 120 | CYCLE: 0 | RULES: () */ 
1905  	 0581	 BB540007		xmem[i7] = i7			# LN: 120 | 
1906  	 0582	 020F7FFF		i7 += 1			# LN: 120 | 
1907  	 0583	 87750006		i7 = i7 + (0x6)			# LN: 120 | 
1908  	 0584	 94750001		i4 = i7 - (0x1)			# LN: 120 | 
1909  	 0585	 98540004		xmem[i4] = a0h			# LN: 120 | 
1910  	 0586	 94750002		i4 = i7 - (0x2)			# LN: 120 | 
1911  	 0587	 B0540004		xmem[i4] = i0			# LN: 120 | 
1912  	 0588	 90750003		i0 = i7 - (0x3)			# LN: 120 | 
1913  	 0589	 B1540000		xmem[i0] = i1			# LN: 120 | 
1914  	 058A				cline_120_0:			/* LN: 125 | CYCLE: 0 | RULES: () */ 
1915  	 058A	 91750001		i1 = i7 - (0x1)			# LN: 125 | 
1916  	 058B	 88140001		a0 = xmem[i1]			# LN: 125 | 
1917  	 058C	 91750002		i1 = i7 - (0x2)			# LN: 125 | 
1918  	 058D	 B1140001		i1 = xmem[i1]			# LN: 125 | 
1919  	 058E	 94750003		i4 = i7 - (0x3)			# LN: 125 | 
1920  	 058F	 B8140004		i4 = xmem[i4]			# LN: 125 | 
1921  	 0590	 A0050000		i0 = (0) + (_coeffH)			# LN: 125 | 
1922  	 0591	 80880000		call (_first_order_IIR)			# LN: 125 | 
1923  	 0592	 90750004		i0 = i7 - (0x4)			# LN: 125 | 
1924  	 0593	 98540000		xmem[i0] = a0h			# LN: 125 | 
1925  	 0594				cline_125_0:			/* LN: 127 | CYCLE: 0 | RULES: () */ 
1926  	 0594	 90750001		i0 = i7 - (0x1)			# LN: 127 | 
1927  	 0595	 88140000		a0 = xmem[i0]			# LN: 127 | 
1928  	 0596	 90750004		i0 = i7 - (0x4)			# LN: 127 | 
1929  	 0597	 89140000		a1 = xmem[i0]			# LN: 127 | 
1930  	 0598	 00004448		a0 = a0 - a1			# LN: 127 | 
1931  	 0599	 00004E40		a0 = a0 >> 1			# LN: 127 | 
1932  	 059A	 90750006		i0 = i7 - (0x6)			# LN: 127 | 
1933  	 059B	 98540010		xmem[i0] = a0h; i0 += 1			# LN: 127, 127 | 
1934  	 059C	 90540000		xmem[i0] = a0l			# LN: 127 | 
1935  	 059D				cline_127_0:			/* LN: 129 | CYCLE: 0 | RULES: () */ 
1936  	 059D	 90750001		i0 = i7 - (0x1)			# LN: 129 | 
1937  	 059E	 88140000		a0 = xmem[i0]			# LN: 129 | 
1938  	 059F	 90750004		i0 = i7 - (0x4)			# LN: 129 | 
1939  	 05A0	 89140000		a1 = xmem[i0]			# LN: 129 | 
1940  	 05A1	 80040000		x0 = xmem[_K2 + 0]			# LN: 129 | 
1941  	 05A2	 90750006		i0 = i7 - (0x6)			# LN: 129 | 
1942  	 05A3	 8C140010		b0 = xmem[i0]; i0 += 1			# LN: 129, 129 | 
1943  	 05A4	 00004408		a0 = a0 + a1			# LN: 129 | 
1944  	 05A5	 94140000		b0l = xmem[i0]			# LN: 129 | 
1945  	 05A6	 01584C20		x1 = a0h; a0 =+ b0			# LN: 129, 129 | 
1946  	 05A7	 00002028		a0 += x1 * x0			# LN: 129 | 
1947  	 05A8	 90750006		i0 = i7 - (0x6)			# LN: 129 | 
1948  	 05A9	 98540010		xmem[i0] = a0h; i0 += 1			# LN: 129, 129 | 
1949  	 05AA	 90540000		xmem[i0] = a0l			# LN: 129 | 
1950  	 05AB				cline_129_0:			/* LN: 132 | CYCLE: 0 | RULES: () */ 
1951  	 05AB	 90750006		i0 = i7 - (0x6)			# LN: 132 | 
1952  	 05AC	 8088002D		call (_clip)			# LN: 132 | 
1953  	 05AD				cline_132_0:			/* LN: 136 | CYCLE: 0 | RULES: () */ 
1954  	 05AD	 90750006		i0 = i7 - (0x6)			# LN: 136 | 
1955  	 05AE	 88140010		a0 = xmem[i0]; i0 += 1			# LN: 136, 136 | 
1956  	 05AF	 90140000		a0l = xmem[i0]			# LN: 136 | 
1957  	 05B0	 48487FFF		a0 = a0			# LN: 136 | 
1958  	 05B1	 800805B2		jmp (__epilogue_244)			# LN: 136 | 
1959  	 05B2				cline_136_0:			/* LN: 138 | CYCLE: 0 | RULES: () */ 
1960  	 05B2				__epilogue_244:			/* LN: 138 | CYCLE: 0 | RULES: () */ 
1961  	 05B2	 97750006		i7 = i7 - (0x6)			# LN: 138 | 
1962  	 05B3	 02177FFF		i7 -= 1			# LN: 138 | 
1963  	 05B4	 81880000		ret			# LN: 138 | 
1964  						
1965  						
1966  						
1967  	 05B5				_shelvingLP:			/* LN: 103 | CYCLE: 0 | RULES: () */ 
1968  	 05B5	 BB540007		xmem[i7] = i7			# LN: 103 | 
1969  	 05B6	 020F7FFF		i7 += 1			# LN: 103 | 
1970  	 05B7	 87750006		i7 = i7 + (0x6)			# LN: 103 | 
1971  	 05B8	 94750001		i4 = i7 - (0x1)			# LN: 103 | 
1972  	 05B9	 98540004		xmem[i4] = a0h			# LN: 103 | 
1973  	 05BA	 94750002		i4 = i7 - (0x2)			# LN: 103 | 
1974  	 05BB	 B0540004		xmem[i4] = i0			# LN: 103 | 
1975  	 05BC	 90750003		i0 = i7 - (0x3)			# LN: 103 | 
1976  	 05BD	 B1540000		xmem[i0] = i1			# LN: 103 | 
1977  	 05BE				cline_103_0:			/* LN: 108 | CYCLE: 0 | RULES: () */ 
1978  	 05BE	 91750001		i1 = i7 - (0x1)			# LN: 108 | 
1979  	 05BF	 88140001		a0 = xmem[i1]			# LN: 108 | 
1980  	 05C0	 91750002		i1 = i7 - (0x2)			# LN: 108 | 
1981  	 05C1	 B1140001		i1 = xmem[i1]			# LN: 108 | 
1982  	 05C2	 94750003		i4 = i7 - (0x3)			# LN: 108 | 
1983  	 05C3	 B8140004		i4 = xmem[i4]			# LN: 108 | 
1984  	 05C4	 A0050000		i0 = (0) + (_coeffL)			# LN: 108 | 
1985  	 05C5	 80880000		call (_first_order_IIR)			# LN: 108 | 
1986  	 05C6	 90750004		i0 = i7 - (0x4)			# LN: 108 | 
1987  	 05C7	 98540000		xmem[i0] = a0h			# LN: 108 | 
1988  	 05C8				cline_108_0:			/* LN: 110 | CYCLE: 0 | RULES: () */ 
1989  	 05C8	 90750001		i0 = i7 - (0x1)			# LN: 110 | 
1990  	 05C9	 88140000		a0 = xmem[i0]			# LN: 110 | 
1991  	 05CA	 90750004		i0 = i7 - (0x4)			# LN: 110 | 
1992  	 05CB	 89140000		a1 = xmem[i0]			# LN: 110 | 
1993  	 05CC	 00004408		a0 = a0 + a1			# LN: 110 | 
1994  	 05CD	 00004E40		a0 = a0 >> 1			# LN: 110 | 
1995  	 05CE	 90750006		i0 = i7 - (0x6)			# LN: 110 | 
1996  	 05CF	 98540010		xmem[i0] = a0h; i0 += 1			# LN: 110, 110 | 
1997  	 05D0	 90540000		xmem[i0] = a0l			# LN: 110 | 
1998  	 05D1				cline_110_0:			/* LN: 112 | CYCLE: 0 | RULES: () */ 
1999  	 05D1	 90750001		i0 = i7 - (0x1)			# LN: 112 | 
2000  	 05D2	 88140000		a0 = xmem[i0]			# LN: 112 | 
2001  	 05D3	 90750004		i0 = i7 - (0x4)			# LN: 112 | 
2002  	 05D4	 89140000		a1 = xmem[i0]			# LN: 112 | 
2003  	 05D5	 80040000		x0 = xmem[_K1 + 0]			# LN: 112 | 
2004  	 05D6	 90750006		i0 = i7 - (0x6)			# LN: 112 | 
2005  	 05D7	 8C140010		b0 = xmem[i0]; i0 += 1			# LN: 112, 112 | 
2006  	 05D8	 00004448		a0 = a0 - a1			# LN: 112 | 
2007  	 05D9	 94140000		b0l = xmem[i0]			# LN: 112 | 
2008  	 05DA	 01584C20		x1 = a0h; a0 =+ b0			# LN: 112, 112 | 
2009  	 05DB	 00002028		a0 += x1 * x0			# LN: 112 | 
2010  	 05DC	 90750006		i0 = i7 - (0x6)			# LN: 112 | 
2011  	 05DD	 98540010		xmem[i0] = a0h; i0 += 1			# LN: 112, 112 | 
2012  	 05DE	 90540000		xmem[i0] = a0l			# LN: 112 | 
2013  	 05DF				cline_112_0:			/* LN: 113 | CYCLE: 0 | RULES: () */ 
2014  	 05DF	 90750006		i0 = i7 - (0x6)			# LN: 113 | 
2015  	 05E0	 8088002D		call (_clip)			# LN: 113 | 
2016  	 05E1				cline_113_0:			/* LN: 116 | CYCLE: 0 | RULES: () */ 
2017  	 05E1	 90750006		i0 = i7 - (0x6)			# LN: 116 | 
2018  	 05E2	 88140010		a0 = xmem[i0]; i0 += 1			# LN: 116, 116 | 
2019  	 05E3	 90140000		a0l = xmem[i0]			# LN: 116 | 
2020  	 05E4	 48487FFF		a0 = a0			# LN: 116 | 
2021  	 05E5	 800805E6		jmp (__epilogue_242)			# LN: 116 | 
2022  	 05E6				cline_116_0:			/* LN: 118 | CYCLE: 0 | RULES: () */ 
2023  	 05E6				__epilogue_242:			/* LN: 118 | CYCLE: 0 | RULES: () */ 
2024  	 05E6	 97750006		i7 = i7 - (0x6)			# LN: 118 | 
2025  	 05E7	 02177FFF		i7 -= 1			# LN: 118 | 
2026  	 05E8	 81880000		ret			# LN: 118 | 
2027  						(null)
				 SYMBOL TABLE 

    Name                                                                                    Type                  Value 

_COMMON_INC_PATH_                                                               					 Define                 "C:/CirrusDSP/crystal32/common/inc/"
_DSP_                                                                           					 Define                 "a"
_Fch                                                                            			  Unused Relocatable        main_GEN_0000:0000H
_Fcl                                                                            			  Unused Relocatable        main_GEN_0001:0000H
_K1                                                                             			  Public Relocatable       main_GEN_0002:0000H
_K2                                                                             			  Public Relocatable       main_GEN_0003:0000H
_LOCAL_INC_PATH_                                                                					 Define                 "inc/"
_LOCAL_SRC_PATH_                                                                					 Define                 "src/"
_MUI_VERSION_                                                                   					 Define                 "020000"
_OVLY_                                                                          					 Define                 "standalone"
_OVLY_REVISION_                                                                 					 Define                 "020000"
_ROUTER_INC_PATH_                                                               					 Define                 "rom_inc/"
_SLOT_                                                                          					 Define                 "0"
_TARGET_FAMILY_                                                                 					 Define                 "crystal32"
_TOOLS_VERSION_                                                                 					 Define                 "0x0701"
_VERSION_                                                                       					 Define                 "00"
__CASM_VER__                                                                    			  Unused Variable		        0 (701H)
__div                                                                           					 External   
__epilogue_240                                                                  			         Relocatable         main_GEN_0029:0051H
__epilogue_242                                                                  			         Relocatable         main_GEN_0029:05E6H
__epilogue_244                                                                  			         Relocatable         main_GEN_0029:05B2H
__epilogue_246                                                                  			         Relocatable         main_GEN_0029:002AH
__epilogue_248                                                                  			         Relocatable         main_GEN_0029:057DH
__epilogue_250                                                                  			         Relocatable         main_GEN_0029:0190H
__start                                                                         					 External   
_alpha1                                                                         			         Relocatable         main_GEN_0004:0000H
_alpha2                                                                         			         Relocatable         main_GEN_0005:0000H
_calculateShelvingCoeff                                                         			  Public Relocatable       main_GEN_0029:0000H
_cl_wavread_bits_per_sample                                                     					 External   
_cl_wavread_close                                                               					 External   
_cl_wavread_frame_rate                                                          					 External   
_cl_wavread_getnchannels                                                        					 External   
_cl_wavread_number_of_frames                                                    					 External   
_cl_wavread_open                                                                					 External   
_cl_wavread_recvsample                                                          					 External   
_cl_wavwrite_close                                                              					 External   
_cl_wavwrite_open                                                               					 External   
_cl_wavwrite_sendsample                                                         					 External   
_clip                                                                           			  Public Relocatable       main_GEN_0029:002DH
_coeffH                                                                         			  Public Relocatable       main_GEN_0006:0000H
_coeffL                                                                         			  Public Relocatable       main_GEN_0007:0000H
_enable                                                                         			  Public Relocatable       main_GEN_0008:0000H
_first_order_IIR                                                                					 External   
_main                                                                           			  Public Relocatable       main_GEN_0029:0054H
_main_h                                                                         			         Relocatable         main_GEN_0009:0000H
_nChannels                                                                      			         Relocatable         main_GEN_0010:0000H
_printf                                                                         					 External   
_processing                                                                     			  Public Relocatable       main_GEN_0029:0193H
_sampleBuffer                                                                   			  Public Relocatable       main_GEN_0011:0000H
_sb_ptr0                                                                        			  Public Relocatable       main_GEN_0012:0000H
_sb_ptr1                                                                        			  Public Relocatable       main_GEN_0013:0000H
_sb_ptr2                                                                        			  Public Relocatable       main_GEN_0014:0000H
_sb_ptr3                                                                        			  Public Relocatable       main_GEN_0015:0000H
_sb_ptr4                                                                        			  Public Relocatable       main_GEN_0016:0000H
_sb_ptr5                                                                        			  Public Relocatable       main_GEN_0017:0000H
_sb_ptr6                                                                        			  Public Relocatable       main_GEN_0018:0000H
_sb_ptr7                                                                        			  Public Relocatable       main_GEN_0019:0000H
_shelvingHP                                                                     			  Public Relocatable       main_GEN_0029:0581H
_shelvingLP                                                                     			  Public Relocatable       main_GEN_0029:05B5H
_strcmp                                                                         					 External   
_strcpy                                                                         					 External   
_string_const_0                                                                 			         Relocatable         main_GEN_0020:0000H
_string_const_1                                                                 			         Relocatable         main_GEN_0021:0000H
_string_const_2                                                                 			         Relocatable         main_GEN_0022:0000H
_test_n                                                                         			         Relocatable         main_GEN_0023:0000H
_test_p                                                                         			         Relocatable         main_GEN_0024:0000H
_z_xH                                                                           			  Public Relocatable       main_GEN_0025:0000H
_z_xL                                                                           			  Public Relocatable       main_GEN_0026:0000H
_z_yH                                                                           			  Public Relocatable       main_GEN_0027:0000H
_z_yL                                                                           			  Public Relocatable       main_GEN_0028:0000H
cline_103_0                                                                     			  Unused Relocatable        main_GEN_0029:05BEH
cline_108_0                                                                     			  Unused Relocatable        main_GEN_0029:05C8H
cline_110_0                                                                     			  Unused Relocatable        main_GEN_0029:05D1H
cline_112_0                                                                     			  Unused Relocatable        main_GEN_0029:05DFH
cline_113_0                                                                     			  Unused Relocatable        main_GEN_0029:05E1H
cline_116_0                                                                     			  Unused Relocatable        main_GEN_0029:05E6H
cline_120_0                                                                     			  Unused Relocatable        main_GEN_0029:058AH
cline_125_0                                                                     			  Unused Relocatable        main_GEN_0029:0594H
cline_127_0                                                                     			  Unused Relocatable        main_GEN_0029:059DH
cline_129_0                                                                     			  Unused Relocatable        main_GEN_0029:05ABH
cline_132_0                                                                     			  Unused Relocatable        main_GEN_0029:05ADH
cline_136_0                                                                     			  Unused Relocatable        main_GEN_0029:05B2H
cline_143_0                                                                     			  Unused Relocatable        main_GEN_0029:0007H
cline_147_0                                                                     			  Unused Relocatable        main_GEN_0029:000BH
cline_148_0                                                                     			  Unused Relocatable        main_GEN_0029:000DH
cline_150_0                                                                     			  Unused Relocatable        main_GEN_0029:0012H
cline_151_0                                                                     			  Unused Relocatable        main_GEN_0029:0014H
cline_153_0                                                                     			  Unused Relocatable        main_GEN_0029:0019H
cline_155_0                                                                     			  Unused Relocatable        main_GEN_0029:001EH
cline_156_0                                                                     			  Unused Relocatable        main_GEN_0029:0023H
cline_157_0                                                                     			  Unused Relocatable        main_GEN_0029:0029H
cline_161_0                                                                     			  Unused Relocatable        main_GEN_0029:0197H
cline_165_0                                                                     			  Unused Relocatable        main_GEN_0029:0199H
cline_166_0                                                                     			  Unused Relocatable        main_GEN_0029:019BH
cline_167_0                                                                     			  Unused Relocatable        main_GEN_0029:019DH
cline_168_0                                                                     			  Unused Relocatable        main_GEN_0029:019FH
cline_169_0                                                                     			  Unused Relocatable        main_GEN_0029:01A1H
cline_170_0                                                                     			  Unused Relocatable        main_GEN_0029:01A3H
cline_171_0                                                                     			  Unused Relocatable        main_GEN_0029:01A5H
cline_172_0                                                                     			  Unused Relocatable        main_GEN_0029:01A7H
cline_174_0                                                                     			  Unused Relocatable        main_GEN_0029:01ABH
cline_174_1                                                                     			  Unused Relocatable        main_GEN_0029:057CH
cline_176_0                                                                     			  Unused Relocatable        main_GEN_0029:01AFH
cline_178_0                                                                     			  Unused Relocatable        main_GEN_0029:01BAH
cline_179_0                                                                     			  Unused Relocatable        main_GEN_0029:01C5H
cline_180_0                                                                     			  Unused Relocatable        main_GEN_0029:01CAH
cline_182_0                                                                     			  Unused Relocatable        main_GEN_0029:01CEH
cline_184_0                                                                     			  Unused Relocatable        main_GEN_0029:01D9H
cline_185_0                                                                     			  Unused Relocatable        main_GEN_0029:01E4H
cline_186_0                                                                     			  Unused Relocatable        main_GEN_0029:01E8H
cline_188_0                                                                     			  Unused Relocatable        main_GEN_0029:01F3H
cline_189_0                                                                     			  Unused Relocatable        main_GEN_0029:01FEH
cline_190_0                                                                     			  Unused Relocatable        main_GEN_0029:0203H
cline_193_0                                                                     			  Unused Relocatable        main_GEN_0029:0207H
cline_195_0                                                                     			  Unused Relocatable        main_GEN_0029:0212H
cline_196_0                                                                     			  Unused Relocatable        main_GEN_0029:021DH
cline_197_0                                                                     			  Unused Relocatable        main_GEN_0029:0221H
cline_199_0                                                                     			  Unused Relocatable        main_GEN_0029:022CH
cline_200_0                                                                     			  Unused Relocatable        main_GEN_0029:0237H
cline_201_0                                                                     			  Unused Relocatable        main_GEN_0029:023BH
cline_203_0                                                                     			  Unused Relocatable        main_GEN_0029:0246H
cline_204_0                                                                     			  Unused Relocatable        main_GEN_0029:0251H
cline_205_0                                                                     			  Unused Relocatable        main_GEN_0029:0256H
cline_207_0                                                                     			  Unused Relocatable        main_GEN_0029:025AH
cline_210_0                                                                     			  Unused Relocatable        main_GEN_0029:0265H
cline_211_0                                                                     			  Unused Relocatable        main_GEN_0029:0270H
cline_212_0                                                                     			  Unused Relocatable        main_GEN_0029:0274H
cline_214_0                                                                     			  Unused Relocatable        main_GEN_0029:027FH
cline_215_0                                                                     			  Unused Relocatable        main_GEN_0029:028AH
cline_216_0                                                                     			  Unused Relocatable        main_GEN_0029:028EH
cline_218_0                                                                     			  Unused Relocatable        main_GEN_0029:0299H
cline_219_0                                                                     			  Unused Relocatable        main_GEN_0029:02A4H
cline_220_0                                                                     			  Unused Relocatable        main_GEN_0029:02A8H
cline_222_0                                                                     			  Unused Relocatable        main_GEN_0029:02B3H
cline_223_0                                                                     			  Unused Relocatable        main_GEN_0029:02BEH
cline_224_0                                                                     			  Unused Relocatable        main_GEN_0029:02C3H
cline_227_0                                                                     			  Unused Relocatable        main_GEN_0029:02C7H
cline_229_0                                                                     			  Unused Relocatable        main_GEN_0029:02D2H
cline_230_0                                                                     			  Unused Relocatable        main_GEN_0029:02DDH
cline_231_0                                                                     			  Unused Relocatable        main_GEN_0029:02E1H
cline_233_0                                                                     			  Unused Relocatable        main_GEN_0029:02ECH
cline_234_0                                                                     			  Unused Relocatable        main_GEN_0029:02F7H
cline_235_0                                                                     			  Unused Relocatable        main_GEN_0029:02FBH
cline_237_0                                                                     			  Unused Relocatable        main_GEN_0029:0306H
cline_238_0                                                                     			  Unused Relocatable        main_GEN_0029:0311H
cline_239_0                                                                     			  Unused Relocatable        main_GEN_0029:0315H
cline_241_0                                                                     			  Unused Relocatable        main_GEN_0029:0320H
cline_242_0                                                                     			  Unused Relocatable        main_GEN_0029:032BH
cline_243_0                                                                     			  Unused Relocatable        main_GEN_0029:032FH
cline_245_0                                                                     			  Unused Relocatable        main_GEN_0029:033AH
cline_246_0                                                                     			  Unused Relocatable        main_GEN_0029:0345H
cline_247_0                                                                     			  Unused Relocatable        main_GEN_0029:034AH
cline_250_0                                                                     			  Unused Relocatable        main_GEN_0029:034EH
cline_253_0                                                                     			  Unused Relocatable        main_GEN_0029:0359H
cline_254_0                                                                     			  Unused Relocatable        main_GEN_0029:0364H
cline_255_0                                                                     			  Unused Relocatable        main_GEN_0029:0368H
cline_257_0                                                                     			  Unused Relocatable        main_GEN_0029:0373H
cline_258_0                                                                     			  Unused Relocatable        main_GEN_0029:037EH
cline_259_0                                                                     			  Unused Relocatable        main_GEN_0029:0382H
cline_261_0                                                                     			  Unused Relocatable        main_GEN_0029:038DH
cline_262_0                                                                     			  Unused Relocatable        main_GEN_0029:0398H
cline_263_0                                                                     			  Unused Relocatable        main_GEN_0029:039CH
cline_265_0                                                                     			  Unused Relocatable        main_GEN_0029:03A7H
cline_266_0                                                                     			  Unused Relocatable        main_GEN_0029:03B2H
cline_267_0                                                                     			  Unused Relocatable        main_GEN_0029:03B6H
cline_269_0                                                                     			  Unused Relocatable        main_GEN_0029:03C1H
cline_270_0                                                                     			  Unused Relocatable        main_GEN_0029:03CCH
cline_271_0                                                                     			  Unused Relocatable        main_GEN_0029:03D0H
cline_273_0                                                                     			  Unused Relocatable        main_GEN_0029:03DBH
cline_274_0                                                                     			  Unused Relocatable        main_GEN_0029:03E6H
cline_275_0                                                                     			  Unused Relocatable        main_GEN_0029:03EBH
cline_277_0                                                                     			  Unused Relocatable        main_GEN_0029:03EFH
cline_280_0                                                                     			  Unused Relocatable        main_GEN_0029:03FAH
cline_281_0                                                                     			  Unused Relocatable        main_GEN_0029:0405H
cline_282_0                                                                     			  Unused Relocatable        main_GEN_0029:0409H
cline_284_0                                                                     			  Unused Relocatable        main_GEN_0029:0414H
cline_285_0                                                                     			  Unused Relocatable        main_GEN_0029:041FH
cline_286_0                                                                     			  Unused Relocatable        main_GEN_0029:0423H
cline_288_0                                                                     			  Unused Relocatable        main_GEN_0029:042EH
cline_289_0                                                                     			  Unused Relocatable        main_GEN_0029:0439H
cline_290_0                                                                     			  Unused Relocatable        main_GEN_0029:043DH
cline_292_0                                                                     			  Unused Relocatable        main_GEN_0029:0448H
cline_293_0                                                                     			  Unused Relocatable        main_GEN_0029:0453H
cline_294_0                                                                     			  Unused Relocatable        main_GEN_0029:0457H
cline_296_0                                                                     			  Unused Relocatable        main_GEN_0029:0462H
cline_297_0                                                                     			  Unused Relocatable        main_GEN_0029:046DH
cline_298_0                                                                     			  Unused Relocatable        main_GEN_0029:0471H
cline_300_0                                                                     			  Unused Relocatable        main_GEN_0029:047CH
cline_301_0                                                                     			  Unused Relocatable        main_GEN_0029:0487H
cline_302_0                                                                     			  Unused Relocatable        main_GEN_0029:048BH
cline_304_0                                                                     			  Unused Relocatable        main_GEN_0029:0496H
cline_305_0                                                                     			  Unused Relocatable        main_GEN_0029:04A1H
cline_306_0                                                                     			  Unused Relocatable        main_GEN_0029:04A6H
cline_313_0                                                                     			  Unused Relocatable        main_GEN_0029:04B1H
cline_314_0                                                                     			  Unused Relocatable        main_GEN_0029:04BCH
cline_315_0                                                                     			  Unused Relocatable        main_GEN_0029:04C0H
cline_317_0                                                                     			  Unused Relocatable        main_GEN_0029:04CBH
cline_318_0                                                                     			  Unused Relocatable        main_GEN_0029:04D6H
cline_319_0                                                                     			  Unused Relocatable        main_GEN_0029:04DAH
cline_321_0                                                                     			  Unused Relocatable        main_GEN_0029:04E5H
cline_322_0                                                                     			  Unused Relocatable        main_GEN_0029:04F0H
cline_323_0                                                                     			  Unused Relocatable        main_GEN_0029:04F4H
cline_325_0                                                                     			  Unused Relocatable        main_GEN_0029:04FFH
cline_326_0                                                                     			  Unused Relocatable        main_GEN_0029:050AH
cline_327_0                                                                     			  Unused Relocatable        main_GEN_0029:050EH
cline_329_0                                                                     			  Unused Relocatable        main_GEN_0029:0519H
cline_330_0                                                                     			  Unused Relocatable        main_GEN_0029:0524H
cline_331_0                                                                     			  Unused Relocatable        main_GEN_0029:0528H
cline_333_0                                                                     			  Unused Relocatable        main_GEN_0029:0533H
cline_334_0                                                                     			  Unused Relocatable        main_GEN_0029:053EH
cline_335_0                                                                     			  Unused Relocatable        main_GEN_0029:0542H
cline_337_0                                                                     			  Unused Relocatable        main_GEN_0029:054DH
cline_338_0                                                                     			  Unused Relocatable        main_GEN_0029:0558H
cline_339_0                                                                     			  Unused Relocatable        main_GEN_0029:055CH
cline_341_0                                                                     			  Unused Relocatable        main_GEN_0029:0567H
cline_342_0                                                                     			  Unused Relocatable        main_GEN_0029:0572H
cline_343_0                                                                     			  Unused Relocatable        main_GEN_0029:0576H
cline_349_0                                                                     			  Unused Relocatable        main_GEN_0029:005BH
cline_364_0                                                                     			  Unused Relocatable        main_GEN_0029:005FH
cline_364_1                                                                     			  Unused Relocatable        main_GEN_0029:00B7H
cline_365_0                                                                     			  Unused Relocatable        main_GEN_0029:0066H
cline_366_0                                                                     			  Unused Relocatable        main_GEN_0029:006EH
cline_368_0                                                                     			  Unused Relocatable        main_GEN_0029:0075H
cline_369_0                                                                     			  Unused Relocatable        main_GEN_0029:007DH
cline_372_0                                                                     			  Unused Relocatable        main_GEN_0029:0084H
cline_373_0                                                                     			  Unused Relocatable        main_GEN_0029:008CH
cline_375_0                                                                     			  Unused Relocatable        main_GEN_0029:0093H
cline_376_0                                                                     			  Unused Relocatable        main_GEN_0029:009BH
cline_381_0                                                                     			  Unused Relocatable        main_GEN_0029:009FH
cline_381_1                                                                     			  Unused Relocatable        main_GEN_0029:00B1H
cline_383_0                                                                     			  Unused Relocatable        main_GEN_0029:00ABH
cline_389_0                                                                     			  Unused Relocatable        main_GEN_0029:00BFH
cline_390_0                                                                     			  Unused Relocatable        main_GEN_0029:00C2H
cline_393_0                                                                     			  Unused Relocatable        main_GEN_0029:00C4H
cline_399_0                                                                     			  Unused Relocatable        main_GEN_0029:00CBH
cline_400_0                                                                     			  Unused Relocatable        main_GEN_0029:00D0H
cline_401_0                                                                     			  Unused Relocatable        main_GEN_0029:00D4H
cline_403_0                                                                     			  Unused Relocatable        main_GEN_0029:00D6H
cline_404_0                                                                     			  Unused Relocatable        main_GEN_0029:00D8H
cline_410_0                                                                     			  Unused Relocatable        main_GEN_0029:00DCH
cline_411_0                                                                     			  Unused Relocatable        main_GEN_0029:00E1H
cline_412_0                                                                     			  Unused Relocatable        main_GEN_0029:00E6H
cline_413_0                                                                     			  Unused Relocatable        main_GEN_0029:00EBH
cline_418_0                                                                     			  Unused Relocatable        main_GEN_0029:00F3H
cline_419_0                                                                     			  Unused Relocatable        main_GEN_0029:00FDH
cline_420_0                                                                     			  Unused Relocatable        main_GEN_0029:0101H
cline_422_0                                                                     			  Unused Relocatable        main_GEN_0029:0103H
cline_423_0                                                                     			  Unused Relocatable        main_GEN_0029:0105H
cline_426_0                                                                     			  Unused Relocatable        main_GEN_0029:0107H
cline_427_0                                                                     			  Unused Relocatable        main_GEN_0029:0109H
cline_428_0                                                                     			  Unused Relocatable        main_GEN_0029:010CH
cline_429_0                                                                     			  Unused Relocatable        main_GEN_0029:010FH
cline_432_0                                                                     			  Unused Relocatable        main_GEN_0029:0111H
cline_433_0                                                                     			  Unused Relocatable        main_GEN_0029:0113H
cline_434_0                                                                     			  Unused Relocatable        main_GEN_0029:0116H
cline_435_0                                                                     			  Unused Relocatable        main_GEN_0029:0119H
cline_444_0                                                                     			  Unused Relocatable        main_GEN_0029:011EH
cline_446_0                                                                     			  Unused Relocatable        main_GEN_0029:0126H
cline_446_1                                                                     			  Unused Relocatable        main_GEN_0029:0188H
cline_448_0                                                                     			  Unused Relocatable        main_GEN_0029:012AH
cline_448_1                                                                     			  Unused Relocatable        main_GEN_0029:0151H
cline_450_0                                                                     			  Unused Relocatable        main_GEN_0029:0132H
cline_450_1                                                                     			  Unused Relocatable        main_GEN_0029:014BH
cline_452_0                                                                     			  Unused Relocatable        main_GEN_0029:0137H
cline_453_0                                                                     			  Unused Relocatable        main_GEN_0029:0144H
cline_456_0                                                                     			  Unused Relocatable        main_GEN_0029:0154H
cline_457_0                                                                     			  Unused Relocatable        main_GEN_0029:0156H
cline_459_0                                                                     			  Unused Relocatable        main_GEN_0029:015AH
cline_459_1                                                                     			  Unused Relocatable        main_GEN_0029:0181H
cline_461_0                                                                     			  Unused Relocatable        main_GEN_0029:0162H
cline_461_1                                                                     			  Unused Relocatable        main_GEN_0029:017BH
cline_463_0                                                                     			  Unused Relocatable        main_GEN_0029:016FH
cline_464_0                                                                     			  Unused Relocatable        main_GEN_0029:0174H
cline_472_0                                                                     			  Unused Relocatable        main_GEN_0029:018BH
cline_473_0                                                                     			  Unused Relocatable        main_GEN_0029:018EH
cline_476_0                                                                     			  Unused Relocatable        main_GEN_0029:0190H
cline_49_0                                                                      			  Unused Relocatable        main_GEN_0029:0032H
cline_53_0                                                                      			  Unused Relocatable        main_GEN_0029:0039H
cline_56_0                                                                      			  Unused Relocatable        main_GEN_0029:0041H
cline_59_0                                                                      			  Unused Relocatable        main_GEN_0029:0048H
cline_61_0                                                                      			  Unused Relocatable        main_GEN_0029:0050H
dummy                                                                           			  Unused Number				     0 (0H)
else_0                                                                          			         Relocatable         main_GEN_0029:0041H
else_1                                                                          			         Relocatable         main_GEN_0029:0050H
else_10                                                                         			         Relocatable         main_GEN_0029:00D8H
else_11                                                                         			         Relocatable         main_GEN_0029:0105H
else_12                                                                         			         Relocatable         main_GEN_0029:0156H
else_2                                                                          			         Relocatable         main_GEN_0029:01CAH
else_3                                                                          			         Relocatable         main_GEN_0029:0203H
else_4                                                                          			         Relocatable         main_GEN_0029:0256H
else_5                                                                          			         Relocatable         main_GEN_0029:02C3H
else_6                                                                          			         Relocatable         main_GEN_0029:034AH
else_7                                                                          			         Relocatable         main_GEN_0029:03EBH
else_8                                                                          			         Relocatable         main_GEN_0029:04A6H
else_9                                                                          			         Relocatable         main_GEN_0029:00C2H
endif_0                                                                         			         Relocatable         main_GEN_0029:0050H
endif_1                                                                         			         Relocatable         main_GEN_0029:0050H
endif_10                                                                        			  Unused Relocatable        main_GEN_0029:00D8H
endif_11                                                                        			  Unused Relocatable        main_GEN_0029:0105H
endif_12                                                                        			         Relocatable         main_GEN_0029:0156H
endif_2                                                                         			         Relocatable         main_GEN_0029:0576H
endif_3                                                                         			         Relocatable         main_GEN_0029:0576H
endif_4                                                                         			         Relocatable         main_GEN_0029:0576H
endif_5                                                                         			         Relocatable         main_GEN_0029:0576H
endif_6                                                                         			         Relocatable         main_GEN_0029:0576H
endif_7                                                                         			         Relocatable         main_GEN_0029:0576H
endif_8                                                                         			         Relocatable         main_GEN_0029:0576H
endif_9                                                                         			         Relocatable         main_GEN_0029:00C4H
for_3                                                                           			         Relocatable         main_GEN_0029:0121H
for_5                                                                           			         Relocatable         main_GEN_0029:012DH
for_7                                                                           			         Relocatable         main_GEN_0029:015DH
for_end_0                                                                       			  Unused Relocatable        main_GEN_0029:057CH
for_end_1                                                                       			  Unused Relocatable        main_GEN_0029:00B7H
for_end_2                                                                       			  Unused Relocatable        main_GEN_0029:00B1H
for_end_3                                                                       			         Relocatable         main_GEN_0029:0188H
for_end_4                                                                       			  Unused Relocatable        main_GEN_0029:0151H
for_end_5                                                                       			         Relocatable         main_GEN_0029:014BH
for_end_6                                                                       			  Unused Relocatable        main_GEN_0029:0181H
for_end_7                                                                       			         Relocatable         main_GEN_0029:017BH
init_latch_label_0                                                              			  Unused Relocatable        main_GEN_0029:0576H
init_latch_label_1                                                              			  Unused Relocatable        main_GEN_0029:00ABH
init_latch_label_2                                                              			  Unused Relocatable        main_GEN_0029:00B1H
init_latch_label_3                                                              			  Unused Relocatable        main_GEN_0029:0144H
init_latch_label_4                                                              			  Unused Relocatable        main_GEN_0029:014BH
init_latch_label_5                                                              			  Unused Relocatable        main_GEN_0029:0174H
init_latch_label_6                                                              			  Unused Relocatable        main_GEN_0029:017BH
init_latch_label_7                                                              			  Unused Relocatable        main_GEN_0029:0181H
label_begin_92                                                                  			  Unused Relocatable        main_GEN_0029:01ABH
label_begin_93                                                                  			  Unused Relocatable        main_GEN_0029:009FH
label_begin_94                                                                  			  Unused Relocatable        main_GEN_0029:005FH
label_begin_95                                                                  			  Unused Relocatable        main_GEN_0029:012AH
label_begin_96                                                                  			  Unused Relocatable        main_GEN_0029:015AH
label_end_92                                                                    			         Relocatable         main_GEN_0029:057BH
label_end_93                                                                    			         Relocatable         main_GEN_0029:00B0H
label_end_94                                                                    			         Relocatable         main_GEN_0029:00B6H
label_end_95                                                                    			         Relocatable         main_GEN_0029:0150H
label_end_96                                                                    			         Relocatable         main_GEN_0029:0180H

	       SEGMENTS:

Size			  Name										 Class
0000H	 __INIT                                  			 CODE                                    
0001H	 main_GEN_0000                           			 X_OVLY                                  
0001H	 main_GEN_0001                           			 X_OVLY                                  
0001H	 main_GEN_0002                           			 X_OVLY                                  
0001H	 main_GEN_0003                           			 X_OVLY                                  
0001H	 main_GEN_0004                           			 X_OVLY                                  
0001H	 main_GEN_0005                           			 X_OVLY                                  
0004H	 main_GEN_0006                           			 X_OVLY                                  
0004H	 main_GEN_0007                           			 X_OVLY                                  
0001H	 main_GEN_0008                           			 X_OVLY                                  
0001H	 main_GEN_0009                           			 X_OVLY                                  
0001H	 main_GEN_0010                           			 X_OVLY                                  
0080H	 main_GEN_0011                           			 Y_OVLY                                  
0001H	 main_GEN_0012                           			 X_OVLY                                  
0001H	 main_GEN_0013                           			 X_OVLY                                  
0001H	 main_GEN_0014                           			 X_OVLY                                  
0001H	 main_GEN_0015                           			 X_OVLY                                  
0001H	 main_GEN_0016                           			 X_OVLY                                  
0001H	 main_GEN_0017                           			 X_OVLY                                  
0001H	 main_GEN_0018                           			 X_OVLY                                  
0001H	 main_GEN_0019                           			 X_OVLY                                  
0002H	 main_GEN_0020                           			 X_OVLY                                  
0021H	 main_GEN_0021                           			 X_OVLY                                  
0021H	 main_GEN_0022                           			 X_OVLY                                  
0001H	 main_GEN_0023                           			 X_OVLY                                  
0001H	 main_GEN_0024                           			 X_OVLY                                  
0010H	 main_GEN_0025                           			 X_OVLY                                  
0010H	 main_GEN_0026                           			 X_OVLY                                  
0010H	 main_GEN_0027                           			 Y_OVLY                                  
0010H	 main_GEN_0028                           			 Y_OVLY                                  
05E9H	 main_GEN_0029                           			 CODE_OVLY                               
